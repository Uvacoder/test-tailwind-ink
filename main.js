/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@simonwep/pickr/dist/pickr.min.js":
/*!********************************************************!*\
  !*** ./node_modules/@simonwep/pickr/dist/pickr.min.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*! Pickr 1.7.2 MIT | https://github.com/Simonwep/pickr */
!function(t,e){ true?module.exports=e():undefined}(window,(function(){return function(t){var e={};function o(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}return o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)o.d(n,i,function(e){return t[e]}.bind(null,i));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=1)}([function(t){t.exports=JSON.parse('{"a":"1.7.2"}')},function(t,e,o){"use strict";o.r(e);var n={};function i(t,e,o,n,i={}){e instanceof HTMLCollection||e instanceof NodeList?e=Array.from(e):Array.isArray(e)||(e=[e]),Array.isArray(o)||(o=[o]);for(const r of e)for(const e of o)r[t](e,n,{capture:!1,...i});return Array.prototype.slice.call(arguments,1)}o.r(n),o.d(n,"on",(function(){return r})),o.d(n,"off",(function(){return s})),o.d(n,"createElementFromString",(function(){return a})),o.d(n,"createFromTemplate",(function(){return c})),o.d(n,"eventPath",(function(){return l})),o.d(n,"resolveElement",(function(){return p})),o.d(n,"adjustableInputNumbers",(function(){return u}));const r=i.bind(null,"addEventListener"),s=i.bind(null,"removeEventListener");function a(t){const e=document.createElement("div");return e.innerHTML=t.trim(),e.firstElementChild}function c(t){const e=(t,e)=>{const o=t.getAttribute(e);return t.removeAttribute(e),o},o=(t,n={})=>{const i=e(t,":obj"),r=e(t,":ref"),s=i?n[i]={}:n;r&&(n[r]=t);for(const n of Array.from(t.children)){const t=e(n,":arr"),i=o(n,t?{}:s);t&&(s[t]||(s[t]=[])).push(Object.keys(i).length?i:n)}return n};return o(a(t))}function l(t){let e=t.path||t.composedPath&&t.composedPath();if(e)return e;let o=t.target.parentElement;for(e=[t.target,o];o=o.parentElement;)e.push(o);return e.push(document,window),e}function p(t){return t instanceof Element?t:"string"==typeof t?t.split(/>>/g).reduce((t,e,o,n)=>(t=t.querySelector(e),o<n.length-1?t.shadowRoot:t),document):null}function u(t,e=(t=>t)){function o(o){const n=[.001,.01,.1][Number(o.shiftKey||2*o.ctrlKey)]*(o.deltaY<0?1:-1);let i=0,r=t.selectionStart;t.value=t.value.replace(/[\d.]+/g,(t,o)=>o<=r&&o+t.length>=r?(r=o,e(Number(t),n,i)):(i++,t)),t.focus(),t.setSelectionRange(r,r),o.preventDefault(),t.dispatchEvent(new Event("input"))}r(t,"focus",()=>r(window,"wheel",o,{passive:!1})),r(t,"blur",()=>s(window,"wheel",o))}var h=o(0);const{min:d,max:f,floor:m,round:v}=Math;function b(t,e,o){e/=100,o/=100;const n=m(t=t/360*6),i=t-n,r=o*(1-e),s=o*(1-i*e),a=o*(1-(1-i)*e),c=n%6;return[255*[o,s,r,r,a,o][c],255*[a,o,o,s,r,r][c],255*[r,r,a,o,o,s][c]]}function g(t,e,o){const n=(2-(e/=100))*(o/=100)/2;return 0!==n&&(e=1===n?0:n<.5?e*o/(2*n):e*o/(2-2*n)),[t,100*e,100*n]}function y(t,e,o){const n=d(t/=255,e/=255,o/=255),i=f(t,e,o),r=i-n;let s,a;if(0===r)s=a=0;else{a=r/i;const n=((i-t)/6+r/2)/r,c=((i-e)/6+r/2)/r,l=((i-o)/6+r/2)/r;t===i?s=l-c:e===i?s=1/3+n-l:o===i&&(s=2/3+c-n),s<0?s+=1:s>1&&(s-=1)}return[360*s,100*a,100*i]}function _(t,e,o,n){return e/=100,o/=100,[...y(255*(1-d(1,(t/=100)*(1-(n/=100))+n)),255*(1-d(1,e*(1-n)+n)),255*(1-d(1,o*(1-n)+n)))]}function w(t,e,o){e/=100;const n=2*(e*=(o/=100)<.5?o:1-o)/(o+e)*100,i=100*(o+e);return[t,isNaN(n)?0:n,i]}function A(t){return y(...t.match(/.{2}/g).map(t=>parseInt(t,16)))}function C(t){t=t.match(/^[a-zA-Z]+$/)?function(t){if("black"===t.toLowerCase())return"#000";const e=document.createElement("canvas").getContext("2d");return e.fillStyle=t,"#000"===e.fillStyle?null:e.fillStyle}(t):t;const e={cmyk:/^cmyk[\D]+([\d.]+)[\D]+([\d.]+)[\D]+([\d.]+)[\D]+([\d.]+)/i,rgba:/^((rgba)|rgb)[\D]+([\d.]+)[\D]+([\d.]+)[\D]+([\d.]+)[\D]*?([\d.]+|$)/i,hsla:/^((hsla)|hsl)[\D]+([\d.]+)[\D]+([\d.]+)[\D]+([\d.]+)[\D]*?([\d.]+|$)/i,hsva:/^((hsva)|hsv)[\D]+([\d.]+)[\D]+([\d.]+)[\D]+([\d.]+)[\D]*?([\d.]+|$)/i,hexa:/^#?(([\dA-Fa-f]{3,4})|([\dA-Fa-f]{6})|([\dA-Fa-f]{8}))$/i},o=t=>t.map(t=>/^(|\d+)\.\d+|\d+$/.test(t)?Number(t):void 0);let n;t:for(const i in e){if(!(n=e[i].exec(t)))continue;const r=t=>!!n[2]==("number"==typeof t);switch(i){case"cmyk":{const[,t,e,r,s]=o(n);if(t>100||e>100||r>100||s>100)break t;return{values:_(t,e,r,s),type:i}}case"rgba":{const[,,,t,e,s,a]=o(n);if(t>255||e>255||s>255||a<0||a>1||!r(a))break t;return{values:[...y(t,e,s),a],a:a,type:i}}case"hexa":{let[,t]=n;4!==t.length&&3!==t.length||(t=t.split("").map(t=>t+t).join(""));const e=t.substring(0,6);let o=t.substring(6);return o=o?parseInt(o,16)/255:void 0,{values:[...A(e),o],a:o,type:i}}case"hsla":{const[,,,t,e,s,a]=o(n);if(t>360||e>100||s>100||a<0||a>1||!r(a))break t;return{values:[...w(t,e,s),a],a:a,type:i}}case"hsva":{const[,,,t,e,s,a]=o(n);if(t>360||e>100||s>100||a<0||a>1||!r(a))break t;return{values:[t,e,s,a],a:a,type:i}}}}return{values:null,type:null}}function k(t=0,e=0,o=0,n=1){const i=(t,e)=>(o=-1)=>e(~o?t.map(t=>Number(t.toFixed(o))):t),r={h:t,s:e,v:o,a:n,toHSVA(){const t=[r.h,r.s,r.v,r.a];return t.toString=i(t,t=>"hsva(".concat(t[0],", ").concat(t[1],"%, ").concat(t[2],"%, ").concat(r.a,")")),t},toHSLA(){const t=[...g(r.h,r.s,r.v),r.a];return t.toString=i(t,t=>"hsla(".concat(t[0],", ").concat(t[1],"%, ").concat(t[2],"%, ").concat(r.a,")")),t},toRGBA(){const t=[...b(r.h,r.s,r.v),r.a];return t.toString=i(t,t=>"rgba(".concat(t[0],", ").concat(t[1],", ").concat(t[2],", ").concat(r.a,")")),t},toCMYK(){const t=function(t,e,o){const n=b(t,e,o),i=n[0]/255,r=n[1]/255,s=n[2]/255,a=d(1-i,1-r,1-s);return[100*(1===a?0:(1-i-a)/(1-a)),100*(1===a?0:(1-r-a)/(1-a)),100*(1===a?0:(1-s-a)/(1-a)),100*a]}(r.h,r.s,r.v);return t.toString=i(t,t=>"cmyk(".concat(t[0],"%, ").concat(t[1],"%, ").concat(t[2],"%, ").concat(t[3],"%)")),t},toHEXA(){const t=function(t,e,o){return b(t,e,o).map(t=>v(t).toString(16).padStart(2,"0"))}(r.h,r.s,r.v),e=r.a>=1?"":Number((255*r.a).toFixed(0)).toString(16).toUpperCase().padStart(2,"0");return e&&t.push(e),t.toString=()=>"#".concat(t.join("").toUpperCase()),t},clone:()=>k(r.h,r.s,r.v,r.a)};return r}const S=t=>Math.max(Math.min(t,1),0);function O(t){const e={options:Object.assign({lock:null,onchange:()=>0,onstop:()=>0},t),_keyboard(t){const{options:o}=e,{type:n,key:i}=t;if(document.activeElement===o.wrapper){const{lock:o}=e.options,r="ArrowUp"===i,s="ArrowRight"===i,a="ArrowDown"===i,c="ArrowLeft"===i;if("keydown"===n&&(r||s||a||c)){let n=0,i=0;"v"===o?n=r||s?1:-1:"h"===o?n=r||s?-1:1:(i=r?-1:a?1:0,n=c?-1:s?1:0),e.update(S(e.cache.x+.01*n),S(e.cache.y+.01*i)),t.preventDefault()}else i.startsWith("Arrow")&&(e.options.onstop(),t.preventDefault())}},_tapstart(t){r(document,["mouseup","touchend","touchcancel"],e._tapstop),r(document,["mousemove","touchmove"],e._tapmove),t.cancelable&&t.preventDefault(),e._tapmove(t)},_tapmove(t){const{options:o,cache:n}=e,{lock:i,element:r,wrapper:s}=o,a=s.getBoundingClientRect();let c=0,l=0;if(t){const e=t&&t.touches&&t.touches[0];c=t?(e||t).clientX:0,l=t?(e||t).clientY:0,c<a.left?c=a.left:c>a.left+a.width&&(c=a.left+a.width),l<a.top?l=a.top:l>a.top+a.height&&(l=a.top+a.height),c-=a.left,l-=a.top}else n&&(c=n.x*a.width,l=n.y*a.height);"h"!==i&&(r.style.left="calc(".concat(c/a.width*100,"% - ").concat(r.offsetWidth/2,"px)")),"v"!==i&&(r.style.top="calc(".concat(l/a.height*100,"% - ").concat(r.offsetHeight/2,"px)")),e.cache={x:c/a.width,y:l/a.height};const p=S(c/a.width),u=S(l/a.height);switch(i){case"v":return o.onchange(p);case"h":return o.onchange(u);default:return o.onchange(p,u)}},_tapstop(){e.options.onstop(),s(document,["mouseup","touchend","touchcancel"],e._tapstop),s(document,["mousemove","touchmove"],e._tapmove)},trigger(){e._tapmove()},update(t=0,o=0){const{left:n,top:i,width:r,height:s}=e.options.wrapper.getBoundingClientRect();"h"===e.options.lock&&(o=t),e._tapmove({clientX:n+r*t,clientY:i+s*o})},destroy(){const{options:t,_tapstart:o,_keyboard:n}=e;s(document,["keydown","keyup"],n),s([t.wrapper,t.element],"mousedown",o),s([t.wrapper,t.element],"touchstart",o,{passive:!1})}},{options:o,_tapstart:n,_keyboard:i}=e;return r([o.wrapper,o.element],"mousedown",n),r([o.wrapper,o.element],"touchstart",n,{passive:!1}),r(document,["keydown","keyup"],i),e}function E(t={}){t=Object.assign({onchange:()=>0,className:"",elements:[]},t);const e=r(t.elements,"click",e=>{t.elements.forEach(o=>o.classList[e.target===o?"add":"remove"](t.className)),t.onchange(e)});return{destroy:()=>s(...e)}}
/*! NanoPop 1.3.0 MIT | https://github.com/Simonwep/nanopop */
let x=(()=>{class t{constructor(e,o,{positionFlipOrder:n=t.defaultPositionFlipOrder,variantFlipOrder:i=t.defaultVariantFlipOrder,container:r=document.documentElement.getBoundingClientRect(),forceApplyOnFailure:s=!1,margin:a=8,position:c="bottom-start"}={}){this.o={positionFlipOrder:n,variantFlipOrder:i,reference:e,popper:o,position:c,container:r,forceApplyOnFailure:s,margin:a}}update(t=this.o,e=!1){const{container:o,reference:n,popper:i,margin:r,position:s,forceApplyOnFailure:a,variantFlipOrder:c,positionFlipOrder:l}=this.o={...this.o,...t};i.style.left="0",i.style.top="0";const p=n.getBoundingClientRect(),u=i.getBoundingClientRect(),h={t:p.top-u.height-r,b:p.bottom+r,r:p.right+r,l:p.left-u.width-r},d={vm:-u.width/2+(p.left+p.width/2),vs:p.left,ve:p.left+p.width-u.width,hs:p.bottom-p.height,he:p.bottom-u.height,hm:p.bottom-p.height/2-u.height/2},[f,m="middle"]=s.split("-"),v=l[f],b=c[m],{top:g,left:y,bottom:_,right:w}=o;for(const t of v){const o="t"===t||"b"===t,n=h[t],[r,s]=o?["top","left"]:["left","top"],[a,c]=o?[u.height,u.width]:[u.width,u.height],[l,p]=o?[_,w]:[w,_],[f,m]=o?[g,y]:[y,g];if(e||!(n<f||n+a>l))for(const a of b){const l=d[(o?"v":"h")+a];if(e||!(l<m||l+c>p))return i.style[s]=l-u[s]+"px",i.style[r]=n-u[r]+"px",t+a}}return a?this.update(void 0,!0):null}}return t.version="1.3.0",t.defaultVariantFlipOrder={start:"sme",middle:"mse",end:"ems"},t.defaultPositionFlipOrder={top:"tbrl",right:"rltb",bottom:"btrl",left:"lrbt"},t})();function L(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}class B{constructor(t){L(this,"_initializingActive",!0),L(this,"_recalc",!0),L(this,"_nanopop",null),L(this,"_root",null),L(this,"_color",k()),L(this,"_lastColor",k()),L(this,"_swatchColors",[]),L(this,"_eventListener",{init:[],save:[],hide:[],show:[],clear:[],change:[],changestop:[],cancel:[],swatchselect:[]}),this.options=t=Object.assign({...B.DEFAULT_OPTIONS},t);const{swatches:e,components:o,theme:n,sliders:i,lockOpacity:r,padding:s}=t;["nano","monolith"].includes(n)&&!i&&(t.sliders="h"),o.interaction||(o.interaction={});const{preview:a,opacity:c,hue:l,palette:p}=o;o.opacity=!r&&c,o.palette=p||a||c||l,this._preBuild(),this._buildComponents(),this._bindEvents(),this._finalBuild(),e&&e.length&&e.forEach(t=>this.addSwatch(t));const{button:u,app:h}=this._root;this._nanopop=new x(u,h,{margin:s}),u.setAttribute("role","button"),u.setAttribute("aria-label",this._t("btn:toggle"));const d=this;requestAnimationFrame((function e(){if(!h.offsetWidth)return requestAnimationFrame(e);d.setColor(t.default),d._rePositioningPicker(),t.defaultRepresentation&&(d._representation=t.defaultRepresentation,d.setColorRepresentation(d._representation)),t.showAlways&&d.show(),d._initializingActive=!1,d._emit("init")}))}_preBuild(){const{options:t}=this;for(const e of["el","container"])t[e]=p(t[e]);this._root=(t=>{const{components:e,useAsButton:o,inline:n,appClass:i,theme:r,lockOpacity:s}=t.options,a=t=>t?"":'style="display:none" hidden',l=e=>t._t(e),p=c('\n      <div :ref="root" class="pickr">\n\n        '.concat(o?"":'<button type="button" :ref="button" class="pcr-button"></button>','\n\n        <div :ref="app" class="pcr-app ').concat(i||"",'" data-theme="').concat(r,'" ').concat(n?'style="position: unset"':"",' aria-label="').concat(l("ui:dialog"),'" role="window">\n          <div class="pcr-selection" ').concat(a(e.palette),'>\n            <div :obj="preview" class="pcr-color-preview" ').concat(a(e.preview),'>\n              <button type="button" :ref="lastColor" class="pcr-last-color" aria-label="').concat(l("btn:last-color"),'"></button>\n              <div :ref="currentColor" class="pcr-current-color"></div>\n            </div>\n\n            <div :obj="palette" class="pcr-color-palette">\n              <div :ref="picker" class="pcr-picker"></div>\n              <div :ref="palette" class="pcr-palette" tabindex="0" aria-label="').concat(l("aria:palette"),'" role="listbox"></div>\n            </div>\n\n            <div :obj="hue" class="pcr-color-chooser" ').concat(a(e.hue),'>\n              <div :ref="picker" class="pcr-picker"></div>\n              <div :ref="slider" class="pcr-hue pcr-slider" tabindex="0" aria-label="').concat(l("aria:hue"),'" role="slider"></div>\n            </div>\n\n            <div :obj="opacity" class="pcr-color-opacity" ').concat(a(e.opacity),'>\n              <div :ref="picker" class="pcr-picker"></div>\n              <div :ref="slider" class="pcr-opacity pcr-slider" tabindex="0" aria-label="').concat(l("aria:opacity"),'" role="slider"></div>\n            </div>\n          </div>\n\n          <div class="pcr-swatches ').concat(e.palette?"":"pcr-last",'" :ref="swatches"></div>\n\n          <div :obj="interaction" class="pcr-interaction" ').concat(a(Object.keys(e.interaction).length),'>\n            <input :ref="result" class="pcr-result" type="text" spellcheck="false" ').concat(a(e.interaction.input),' aria-label="').concat(l("aria:input"),'">\n\n            <input :arr="options" class="pcr-type" data-type="HEXA" value="').concat(s?"HEX":"HEXA",'" type="button" ').concat(a(e.interaction.hex),'>\n            <input :arr="options" class="pcr-type" data-type="RGBA" value="').concat(s?"RGB":"RGBA",'" type="button" ').concat(a(e.interaction.rgba),'>\n            <input :arr="options" class="pcr-type" data-type="HSLA" value="').concat(s?"HSL":"HSLA",'" type="button" ').concat(a(e.interaction.hsla),'>\n            <input :arr="options" class="pcr-type" data-type="HSVA" value="').concat(s?"HSV":"HSVA",'" type="button" ').concat(a(e.interaction.hsva),'>\n            <input :arr="options" class="pcr-type" data-type="CMYK" value="CMYK" type="button" ').concat(a(e.interaction.cmyk),'>\n\n            <input :ref="save" class="pcr-save" value="').concat(l("btn:save"),'" type="button" ').concat(a(e.interaction.save),' aria-label="').concat(l("aria:btn:save"),'">\n            <input :ref="cancel" class="pcr-cancel" value="').concat(l("btn:cancel"),'" type="button" ').concat(a(e.interaction.cancel),' aria-label="').concat(l("aria:btn:cancel"),'">\n            <input :ref="clear" class="pcr-clear" value="').concat(l("btn:clear"),'" type="button" ').concat(a(e.interaction.clear),' aria-label="').concat(l("aria:btn:clear"),'">\n          </div>\n        </div>\n      </div>\n    ')),u=p.interaction;return u.options.find(t=>!t.hidden&&!t.classList.add("active")),u.type=()=>u.options.find(t=>t.classList.contains("active")),p})(this),t.useAsButton&&(this._root.button=t.el),t.container.appendChild(this._root.root)}_finalBuild(){const t=this.options,e=this._root;if(t.container.removeChild(e.root),t.inline){const o=t.el.parentElement;t.el.nextSibling?o.insertBefore(e.app,t.el.nextSibling):o.appendChild(e.app)}else t.container.appendChild(e.app);t.useAsButton?t.inline&&t.el.remove():t.el.parentNode.replaceChild(e.root,t.el),t.disabled&&this.disable(),t.comparison||(e.button.style.transition="none",t.useAsButton||(e.preview.lastColor.style.transition="none")),this.hide()}_buildComponents(){const t=this,e=this.options.components,o=(t.options.sliders||"v").repeat(2),[n,i]=o.match(/^[vh]+$/g)?o:[],r=()=>this._color||(this._color=this._lastColor.clone()),s={palette:O({element:t._root.palette.picker,wrapper:t._root.palette.palette,onstop:()=>t._emit("changestop",t),onchange(o,n){if(!e.palette)return;const i=r(),{_root:s,options:a}=t,{lastColor:c,currentColor:l}=s.preview;t._recalc&&(i.s=100*o,i.v=100-100*n,i.v<0&&(i.v=0),t._updateOutput());const p=i.toRGBA().toString(0);this.element.style.background=p,this.wrapper.style.background="\n                        linear-gradient(to top, rgba(0, 0, 0, ".concat(i.a,"), transparent),\n                        linear-gradient(to left, hsla(").concat(i.h,", 100%, 50%, ").concat(i.a,"), rgba(255, 255, 255, ").concat(i.a,"))\n                    "),a.comparison?a.useAsButton||t._lastColor||(c.style.color=p):(s.button.style.color=p,s.button.classList.remove("clear"));const u=i.toHEXA().toString();for(const{el:e,color:o}of t._swatchColors)e.classList[u===o.toHEXA().toString()?"add":"remove"]("pcr-active");l.style.color=p}}),hue:O({lock:"v"===i?"h":"v",element:t._root.hue.picker,wrapper:t._root.hue.slider,onstop:()=>t._emit("changestop",t),onchange(o){if(!e.hue||!e.palette)return;const n=r();t._recalc&&(n.h=360*o),this.element.style.backgroundColor="hsl(".concat(n.h,", 100%, 50%)"),s.palette.trigger()}}),opacity:O({lock:"v"===n?"h":"v",element:t._root.opacity.picker,wrapper:t._root.opacity.slider,onstop:()=>t._emit("changestop",t),onchange(o){if(!e.opacity||!e.palette)return;const n=r();t._recalc&&(n.a=Math.round(100*o)/100),this.element.style.background="rgba(0, 0, 0, ".concat(n.a,")"),s.palette.trigger()}}),selectable:E({elements:t._root.interaction.options,className:"active",onchange(e){t._representation=e.target.getAttribute("data-type").toUpperCase(),t._recalc&&t._updateOutput()}})};this._components=s}_bindEvents(){const{_root:t,options:e}=this,o=[r(t.interaction.clear,"click",()=>this._clearColor()),r([t.interaction.cancel,t.preview.lastColor],"click",()=>{this._emit("cancel",this),this.setHSVA(...(this._lastColor||this._color).toHSVA(),!0)}),r(t.interaction.save,"click",()=>{!this.applyColor()&&!e.showAlways&&this.hide()}),r(t.interaction.result,["keyup","input"],t=>{this.setColor(t.target.value,!0)&&!this._initializingActive&&this._emit("change",this._color),t.stopImmediatePropagation()}),r(t.interaction.result,["focus","blur"],t=>{this._recalc="blur"===t.type,this._recalc&&this._updateOutput()}),r([t.palette.palette,t.palette.picker,t.hue.slider,t.hue.picker,t.opacity.slider,t.opacity.picker],["mousedown","touchstart"],()=>this._recalc=!0,{passive:!0})];if(!e.showAlways){const n=e.closeWithKey;o.push(r(t.button,"click",()=>this.isOpen()?this.hide():this.show()),r(document,"keyup",t=>this.isOpen()&&(t.key===n||t.code===n)&&this.hide()),r(document,["touchstart","mousedown"],e=>{this.isOpen()&&!l(e).some(e=>e===t.app||e===t.button)&&this.hide()},{capture:!0}))}if(e.adjustableNumbers){const e={rgba:[255,255,255,1],hsva:[360,100,100,1],hsla:[360,100,100,1],cmyk:[100,100,100,100]};u(t.interaction.result,(t,o,n)=>{const i=e[this.getColorRepresentation().toLowerCase()];if(i){const e=i[n],r=t+(e>=100?1e3*o:o);return r<=0?0:Number((r<e?r:e).toPrecision(3))}return t})}if(e.autoReposition&&!e.inline){let t=null;const n=this;o.push(r(window,["scroll","resize"],()=>{n.isOpen()&&(e.closeOnScroll&&n.hide(),null===t?(t=setTimeout(()=>t=null,100),requestAnimationFrame((function e(){n._rePositioningPicker(),null!==t&&requestAnimationFrame(e)}))):(clearTimeout(t),t=setTimeout(()=>t=null,100)))},{capture:!0}))}this._eventBindings=o}_rePositioningPicker(){const{options:t}=this;if(!t.inline){if(!this._nanopop.update({container:document.body.getBoundingClientRect(),position:t.position,forceApplyOnFailure:!this._recalc})){const t=this._root.app,e=t.getBoundingClientRect();t.style.top="".concat((window.innerHeight-e.height)/2,"px"),t.style.left="".concat((window.innerWidth-e.width)/2,"px")}}}_updateOutput(){const{_root:t,_color:e,options:o}=this;if(t.interaction.type()){const n="to".concat(t.interaction.type().getAttribute("data-type"));t.interaction.result.value="function"==typeof e[n]?e[n]().toString(o.outputPrecision):""}!this._initializingActive&&this._recalc&&this._emit("change",e)}_clearColor(t=!1){const{_root:e,options:o}=this;o.useAsButton||(e.button.style.color="rgba(0, 0, 0, 0.15)"),e.button.classList.add("clear"),o.showAlways||this.hide(),this._lastColor=null,this._initializingActive||t||(this._emit("save",null),this._emit("clear",this))}_parseLocalColor(t){const{values:e,type:o,a:n}=C(t),{lockOpacity:i}=this.options,r=void 0!==n&&1!==n;return e&&3===e.length&&(e[3]=void 0),{values:!e||i&&r?null:e,type:o}}_t(t){return this.options.i18n[t]||B.I18N_DEFAULTS[t]}_emit(t,...e){this._eventListener[t].forEach(t=>t(...e,this))}on(t,e){return this._eventListener[t].push(e),this}off(t,e){const o=this._eventListener[t]||[],n=o.indexOf(e);return~n&&o.splice(n,1),this}addSwatch(t){const{values:e}=this._parseLocalColor(t);if(e){const{_swatchColors:t,_root:o}=this,n=k(...e),i=a('<button type="button" style="color: '.concat(n.toRGBA().toString(0),'" aria-label="').concat(this._t("btn:swatch"),'"/>'));return o.swatches.appendChild(i),t.push({el:i,color:n}),this._eventBindings.push(r(i,"click",()=>{this.setHSVA(...n.toHSVA(),!0),this._emit("swatchselect",n),this._emit("change",n)})),!0}return!1}removeSwatch(t){const e=this._swatchColors[t];if(e){const{el:o}=e;return this._root.swatches.removeChild(o),this._swatchColors.splice(t,1),!0}return!1}applyColor(t=!1){const{preview:e,button:o}=this._root,n=this._color.toRGBA().toString(0);return e.lastColor.style.color=n,this.options.useAsButton||(o.style.color=n),o.classList.remove("clear"),this._lastColor=this._color.clone(),this._initializingActive||t||this._emit("save",this._color),this}destroy(){this._eventBindings.forEach(t=>s(...t)),Object.keys(this._components).forEach(t=>this._components[t].destroy())}destroyAndRemove(){this.destroy();const{root:t,app:e}=this._root;t.parentElement&&t.parentElement.removeChild(t),e.parentElement.removeChild(e),Object.keys(this).forEach(t=>this[t]=null)}hide(){return this._root.app.classList.remove("visible"),this._emit("hide",this),this}show(){return this.options.disabled||(this._root.app.classList.add("visible"),this._rePositioningPicker(),this._emit("show",this)),this}isOpen(){return this._root.app.classList.contains("visible")}setHSVA(t=360,e=0,o=0,n=1,i=!1){const r=this._recalc;if(this._recalc=!1,t<0||t>360||e<0||e>100||o<0||o>100||n<0||n>1)return!1;this._color=k(t,e,o,n);const{hue:s,opacity:a,palette:c}=this._components;return s.update(t/360),a.update(n),c.update(e/100,1-o/100),i||this.applyColor(),r&&this._updateOutput(),this._recalc=r,!0}setColor(t,e=!1){if(null===t)return this._clearColor(e),!0;const{values:o,type:n}=this._parseLocalColor(t);if(o){const t=n.toUpperCase(),{options:i}=this._root.interaction,r=i.find(e=>e.getAttribute("data-type")===t);if(r&&!r.hidden)for(const t of i)t.classList[t===r?"add":"remove"]("active");return!!this.setHSVA(...o,e)&&this.setColorRepresentation(t)}return!1}setColorRepresentation(t){return t=t.toUpperCase(),!!this._root.interaction.options.find(e=>e.getAttribute("data-type").startsWith(t)&&!e.click())}getColorRepresentation(){return this._representation}getColor(){return this._color}getSelectedColor(){return this._lastColor}getRoot(){return this._root}disable(){return this.hide(),this.options.disabled=!0,this._root.button.classList.add("disabled"),this}enable(){return this.options.disabled=!1,this._root.button.classList.remove("disabled"),this}}L(B,"utils",n),L(B,"version",h.a),L(B,"I18N_DEFAULTS",{"ui:dialog":"color picker dialog","btn:toggle":"toggle color picker dialog","btn:swatch":"color swatch","btn:last-color":"use previous color","btn:save":"Save","btn:cancel":"Cancel","btn:clear":"Clear","aria:btn:save":"save and close","aria:btn:cancel":"cancel and close","aria:btn:clear":"clear and close","aria:input":"color input field","aria:palette":"color selection area","aria:hue":"hue selection slider","aria:opacity":"selection slider"}),L(B,"DEFAULT_OPTIONS",{appClass:null,theme:"classic",useAsButton:!1,padding:8,disabled:!1,comparison:!0,closeOnScroll:!1,outputPrecision:0,lockOpacity:!1,autoReposition:!0,container:"body",components:{interaction:{}},i18n:{},swatches:null,inline:!1,sliders:null,default:"#42445a",defaultRepresentation:null,position:"bottom-middle",adjustableNumbers:!0,showAlways:!1,closeWithKey:"Escape"}),L(B,"create",t=>new B(t));e.default=B}]).default}));
//# sourceMappingURL=pickr.min.js.map

/***/ }),

/***/ "./node_modules/@simonwep/pickr/dist/themes/nano.min.css":
/*!***************************************************************!*\
  !*** ./node_modules/@simonwep/pickr/dist/themes/nano.min.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../../css-loader??ref--6-1!../../../../postcss-loader/src??ref--6-2!./nano.min.css */ "./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/@simonwep/pickr/dist/themes/nano.min.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../../style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/@simonwep/pickr/dist/themes/nano.min.css":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader??ref--6-1!./node_modules/postcss-loader/src??ref--6-2!./node_modules/@simonwep/pickr/dist/themes/nano.min.css ***!
  \***********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../../css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "/*! Pickr 1.7.2 MIT | https://github.com/Simonwep/pickr */\n\n.pickr{\n  position:relative;\n  overflow:visible;\n  transform:translateY(0)\n}\n\n.pickr *{\n  box-sizing:border-box;\n  outline:none;\n  border:none;\n  -webkit-appearance:none\n}\n\n.pickr .pcr-button{\n  position:relative;\n  height:2em;\n  width:2em;\n  padding:.5em;\n  cursor:pointer;\n  font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;\n  border-radius:.15em;\n  background:url('data:image/svg+xml;utf8, <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\" stroke=\"%2342445A\" stroke-width=\"5px\" stroke-linecap=\"round\"><path d=\"M45,45L5,5\"></path><path d=\"M45,5L5,45\"></path></svg>') no-repeat 50%;\n  background-size:0;\n  transition:all .3s\n}\n\n.pickr .pcr-button:before{\n  background:url('data:image/svg+xml;utf8, <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2 2\"><path fill=\"white\" d=\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\"/><path fill=\"gray\" d=\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\"/></svg>');\n  background-size:.5em;\n  z-index:-1;\n  z-index:auto\n}\n\n.pickr .pcr-button:after,.pickr .pcr-button:before{\n  position:absolute;\n  content:\"\";\n  top:0;\n  left:0;\n  width:100%;\n  height:100%;\n  border-radius:.15em\n}\n\n.pickr .pcr-button:after{\n  transition:background .3s;\n  background:currentColor\n}\n\n.pickr .pcr-button.clear{\n  background-size:70%\n}\n\n.pickr .pcr-button.clear:before{\n  opacity:0\n}\n\n.pickr .pcr-button.clear:focus{\n  box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px currentColor\n}\n\n.pickr .pcr-button.disabled{\n  cursor:not-allowed\n}\n\n.pcr-app *,.pickr *{\n  box-sizing:border-box;\n  outline:none;\n  border:none;\n  -webkit-appearance:none\n}\n\n.pcr-app button.pcr-active,.pcr-app button:focus,.pcr-app input.pcr-active,.pcr-app input:focus,.pickr button.pcr-active,.pickr button:focus,.pickr input.pcr-active,.pickr input:focus{\n  box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px currentColor\n}\n\n.pcr-app .pcr-palette,.pcr-app .pcr-slider,.pickr .pcr-palette,.pickr .pcr-slider{\n  transition:box-shadow .3s\n}\n\n.pcr-app .pcr-palette:focus,.pcr-app .pcr-slider:focus,.pickr .pcr-palette:focus,.pickr .pcr-slider:focus{\n  box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px rgba(0,0,0,.25)\n}\n\n.pcr-app{\n  position:fixed;\n  display:flex;\n  flex-direction:column;\n  z-index:10000;\n  border-radius:.1em;\n  background:#fff;\n  opacity:0;\n  visibility:hidden;\n  transition:opacity .3s,visibility 0s .3s;\n  font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;\n  box-shadow:0 .15em 1.5em 0 rgba(0,0,0,.1),0 0 1em 0 rgba(0,0,0,.03);\n  left:0;\n  top:0\n}\n\n.pcr-app.visible{\n  transition:opacity .3s;\n  visibility:visible;\n  opacity:1\n}\n\n.pcr-app .pcr-swatches{\n  display:flex;\n  flex-wrap:wrap;\n  margin-top:.75em\n}\n\n.pcr-app .pcr-swatches.pcr-last{\n  margin:0\n}\n\n@supports (display:grid){\n  .pcr-app .pcr-swatches{\n    display:grid;\n    align-items:center;\n    grid-template-columns:repeat(auto-fit,1.75em)\n  }\n}\n\n.pcr-app .pcr-swatches>button{\n  font-size:1em;\n  position:relative;\n  width:calc(1.75em - 5px);\n  height:calc(1.75em - 5px);\n  border-radius:.15em;\n  cursor:pointer;\n  margin:2.5px;\n  flex-shrink:0;\n  justify-self:center;\n  transition:all .15s;\n  overflow:hidden;\n  background:transparent;\n  z-index:1\n}\n\n.pcr-app .pcr-swatches>button:before{\n  position:absolute;\n  content:\"\";\n  top:0;\n  left:0;\n  width:100%;\n  height:100%;\n  background:url('data:image/svg+xml;utf8, <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2 2\"><path fill=\"white\" d=\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\"/><path fill=\"gray\" d=\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\"/></svg>');\n  background-size:6px;\n  border-radius:.15em;\n  z-index:-1\n}\n\n.pcr-app .pcr-swatches>button:after{\n  content:\"\";\n  position:absolute;\n  top:0;\n  left:0;\n  width:100%;\n  height:100%;\n  background:currentColor;\n  border:1px solid rgba(0,0,0,.05);\n  border-radius:.15em;\n  box-sizing:border-box\n}\n\n.pcr-app .pcr-swatches>button:hover{\n  -webkit-filter:brightness(1.05);\n  filter:brightness(1.05)\n}\n\n.pcr-app .pcr-swatches>button:not(.pcr-active){\n  box-shadow:none\n}\n\n.pcr-app .pcr-interaction{\n  display:flex;\n  flex-wrap:wrap;\n  align-items:center;\n  margin:0 -.2em\n}\n\n.pcr-app .pcr-interaction>*{\n  margin:0 .2em\n}\n\n.pcr-app .pcr-interaction input{\n  letter-spacing:.07em;\n  font-size:.75em;\n  text-align:center;\n  cursor:pointer;\n  color:#75797e;\n  background:#f1f3f4;\n  border-radius:.15em;\n  transition:all .15s;\n  padding:.45em .5em;\n  margin-top:.75em\n}\n\n.pcr-app .pcr-interaction input:hover{\n  -webkit-filter:brightness(.975);\n  filter:brightness(.975)\n}\n\n.pcr-app .pcr-interaction input:focus{\n  box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px rgba(66,133,244,.75)\n}\n\n.pcr-app .pcr-interaction .pcr-result{\n  color:#75797e;\n  text-align:left;\n  flex:1 1 8em;\n  min-width:8em;\n  transition:all .2s;\n  border-radius:.15em;\n  background:#f1f3f4;\n  cursor:text\n}\n\n.pcr-app .pcr-interaction .pcr-result::-moz-selection{\n  background:#4285f4;\n  color:#fff\n}\n\n.pcr-app .pcr-interaction .pcr-result::selection{\n  background:#4285f4;\n  color:#fff\n}\n\n.pcr-app .pcr-interaction .pcr-type.active{\n  color:#fff;\n  background:#4285f4\n}\n\n.pcr-app .pcr-interaction .pcr-cancel,.pcr-app .pcr-interaction .pcr-clear,.pcr-app .pcr-interaction .pcr-save{\n  width:auto;\n  color:#fff\n}\n\n.pcr-app .pcr-interaction .pcr-cancel:hover,.pcr-app .pcr-interaction .pcr-clear:hover,.pcr-app .pcr-interaction .pcr-save:hover{\n  -webkit-filter:brightness(.925);\n  filter:brightness(.925)\n}\n\n.pcr-app .pcr-interaction .pcr-save{\n  background:#4285f4\n}\n\n.pcr-app .pcr-interaction .pcr-cancel,.pcr-app .pcr-interaction .pcr-clear{\n  background:#f44250\n}\n\n.pcr-app .pcr-interaction .pcr-cancel:focus,.pcr-app .pcr-interaction .pcr-clear:focus{\n  box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px rgba(244,66,80,.75)\n}\n\n.pcr-app .pcr-selection .pcr-picker{\n  position:absolute;\n  height:18px;\n  width:18px;\n  border:2px solid #fff;\n  border-radius:100%;\n  -webkit-user-select:none;\n  -moz-user-select:none;\n  -ms-user-select:none;\n  user-select:none\n}\n\n.pcr-app .pcr-selection .pcr-color-chooser,.pcr-app .pcr-selection .pcr-color-opacity,.pcr-app .pcr-selection .pcr-color-palette{\n  position:relative;\n  -webkit-user-select:none;\n  -moz-user-select:none;\n  -ms-user-select:none;\n  user-select:none;\n  display:flex;\n  flex-direction:column;\n  cursor:grab;\n  cursor:-webkit-grab\n}\n\n.pcr-app .pcr-selection .pcr-color-chooser:active,.pcr-app .pcr-selection .pcr-color-opacity:active,.pcr-app .pcr-selection .pcr-color-palette:active{\n  cursor:grabbing;\n  cursor:-webkit-grabbing\n}\n\n.pcr-app[data-theme=nano]{\n  width:14.25em;\n  max-width:95vw\n}\n\n.pcr-app[data-theme=nano] .pcr-swatches{\n  margin-top:.6em;\n  padding:0 .6em\n}\n\n.pcr-app[data-theme=nano] .pcr-interaction{\n  padding:0 .6em .6em\n}\n\n.pcr-app[data-theme=nano] .pcr-selection{\n  display:grid;\n  grid-gap:.6em;\n  grid-template-columns:1fr 4fr;\n  grid-template-rows:5fr auto auto;\n  align-items:center;\n  height:10.5em;\n  width:100%;\n  align-self:flex-start\n}\n\n.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview{\n  grid-area:2/1/4/1;\n  height:100%;\n  width:100%;\n  display:flex;\n  flex-direction:row;\n  justify-content:center;\n  margin-left:.6em\n}\n\n.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-last-color{\n  display:none\n}\n\n.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-current-color{\n  position:relative;\n  background:currentColor;\n  width:2em;\n  height:2em;\n  border-radius:50em;\n  overflow:hidden\n}\n\n.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-current-color:before{\n  position:absolute;\n  content:\"\";\n  top:0;\n  left:0;\n  width:100%;\n  height:100%;\n  background:url('data:image/svg+xml;utf8, <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2 2\"><path fill=\"white\" d=\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\"/><path fill=\"gray\" d=\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\"/></svg>');\n  background-size:.5em;\n  border-radius:.15em;\n  z-index:-1\n}\n\n.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette{\n  grid-area:1/1/2/3;\n  width:100%;\n  height:100%;\n  z-index:1\n}\n\n.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette .pcr-palette{\n  border-radius:.15em;\n  width:100%;\n  height:100%\n}\n\n.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette .pcr-palette:before{\n  position:absolute;\n  content:\"\";\n  top:0;\n  left:0;\n  width:100%;\n  height:100%;\n  background:url('data:image/svg+xml;utf8, <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2 2\"><path fill=\"white\" d=\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\"/><path fill=\"gray\" d=\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\"/></svg>');\n  background-size:.5em;\n  border-radius:.15em;\n  z-index:-1\n}\n\n.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser{\n  grid-area:2/2/2/2\n}\n\n.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity{\n  grid-area:3/2/3/2\n}\n\n.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity{\n  height:.5em;\n  margin:0 .6em\n}\n\n.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-picker,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-picker{\n  top:50%;\n  transform:translateY(-50%)\n}\n\n.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-slider,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-slider{\n  flex-grow:1;\n  border-radius:50em\n}\n\n.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-slider{\n  background:linear-gradient(90deg,red,#ff0,#0f0,#0ff,#00f,#f0f,red)\n}\n\n.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-slider{\n  background:linear-gradient(90deg,transparent,#000),url('data:image/svg+xml;utf8, <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2 2\"><path fill=\"white\" d=\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\"/><path fill=\"gray\" d=\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\"/></svg>');\n  background-size:100%,.25em\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),

/***/ "./node_modules/mustache/mustache.js":
/*!*******************************************!*\
  !*** ./node_modules/mustache/mustache.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// This file has been generated from mustache.mjs
(function (global, factory) {
   true ? module.exports = factory() :
  undefined;
}(this, (function () { 'use strict';

  /*!
   * mustache.js - Logic-less {{mustache}} templates with JavaScript
   * http://github.com/janl/mustache.js
   */

  var objectToString = Object.prototype.toString;
  var isArray = Array.isArray || function isArrayPolyfill (object) {
    return objectToString.call(object) === '[object Array]';
  };

  function isFunction (object) {
    return typeof object === 'function';
  }

  /**
   * More correct typeof string handling array
   * which normally returns typeof 'object'
   */
  function typeStr (obj) {
    return isArray(obj) ? 'array' : typeof obj;
  }

  function escapeRegExp (string) {
    return string.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&');
  }

  /**
   * Null safe way of checking whether or not an object,
   * including its prototype, has a given property
   */
  function hasProperty (obj, propName) {
    return obj != null && typeof obj === 'object' && (propName in obj);
  }

  /**
   * Safe way of detecting whether or not the given thing is a primitive and
   * whether it has the given property
   */
  function primitiveHasOwnProperty (primitive, propName) {
    return (
      primitive != null
      && typeof primitive !== 'object'
      && primitive.hasOwnProperty
      && primitive.hasOwnProperty(propName)
    );
  }

  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577
  // See https://github.com/janl/mustache.js/issues/189
  var regExpTest = RegExp.prototype.test;
  function testRegExp (re, string) {
    return regExpTest.call(re, string);
  }

  var nonSpaceRe = /\S/;
  function isWhitespace (string) {
    return !testRegExp(nonSpaceRe, string);
  }

  var entityMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;',
    '/': '&#x2F;',
    '`': '&#x60;',
    '=': '&#x3D;'
  };

  function escapeHtml (string) {
    return String(string).replace(/[&<>"'`=\/]/g, function fromEntityMap (s) {
      return entityMap[s];
    });
  }

  var whiteRe = /\s*/;
  var spaceRe = /\s+/;
  var equalsRe = /\s*=/;
  var curlyRe = /\s*\}/;
  var tagRe = /#|\^|\/|>|\{|&|=|!/;

  /**
   * Breaks up the given `template` string into a tree of tokens. If the `tags`
   * argument is given here it must be an array with two string values: the
   * opening and closing tags used in the template (e.g. [ "<%", "%>" ]). Of
   * course, the default is to use mustaches (i.e. mustache.tags).
   *
   * A token is an array with at least 4 elements. The first element is the
   * mustache symbol that was used inside the tag, e.g. "#" or "&". If the tag
   * did not contain a symbol (i.e. {{myValue}}) this element is "name". For
   * all text that appears outside a symbol this element is "text".
   *
   * The second element of a token is its "value". For mustache tags this is
   * whatever else was inside the tag besides the opening symbol. For text tokens
   * this is the text itself.
   *
   * The third and fourth elements of the token are the start and end indices,
   * respectively, of the token in the original template.
   *
   * Tokens that are the root node of a subtree contain two more elements: 1) an
   * array of tokens in the subtree and 2) the index in the original template at
   * which the closing tag for that section begins.
   *
   * Tokens for partials also contain two more elements: 1) a string value of
   * indendation prior to that tag and 2) the index of that tag on that line -
   * eg a value of 2 indicates the partial is the third tag on this line.
   */
  function parseTemplate (template, tags) {
    if (!template)
      return [];
    var lineHasNonSpace = false;
    var sections = [];     // Stack to hold section tokens
    var tokens = [];       // Buffer to hold the tokens
    var spaces = [];       // Indices of whitespace tokens on the current line
    var hasTag = false;    // Is there a {{tag}} on the current line?
    var nonSpace = false;  // Is there a non-space char on the current line?
    var indentation = '';  // Tracks indentation for tags that use it
    var tagIndex = 0;      // Stores a count of number of tags encountered on a line

    // Strips all whitespace tokens array for the current line
    // if there was a {{#tag}} on it and otherwise only space.
    function stripSpace () {
      if (hasTag && !nonSpace) {
        while (spaces.length)
          delete tokens[spaces.pop()];
      } else {
        spaces = [];
      }

      hasTag = false;
      nonSpace = false;
    }

    var openingTagRe, closingTagRe, closingCurlyRe;
    function compileTags (tagsToCompile) {
      if (typeof tagsToCompile === 'string')
        tagsToCompile = tagsToCompile.split(spaceRe, 2);

      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)
        throw new Error('Invalid tags: ' + tagsToCompile);

      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\s*');
      closingTagRe = new RegExp('\\s*' + escapeRegExp(tagsToCompile[1]));
      closingCurlyRe = new RegExp('\\s*' + escapeRegExp('}' + tagsToCompile[1]));
    }

    compileTags(tags || mustache.tags);

    var scanner = new Scanner(template);

    var start, type, value, chr, token, openSection;
    while (!scanner.eos()) {
      start = scanner.pos;

      // Match any text between tags.
      value = scanner.scanUntil(openingTagRe);

      if (value) {
        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {
          chr = value.charAt(i);

          if (isWhitespace(chr)) {
            spaces.push(tokens.length);
            indentation += chr;
          } else {
            nonSpace = true;
            lineHasNonSpace = true;
            indentation += ' ';
          }

          tokens.push([ 'text', chr, start, start + 1 ]);
          start += 1;

          // Check for whitespace on the current line.
          if (chr === '\n') {
            stripSpace();
            indentation = '';
            tagIndex = 0;
            lineHasNonSpace = false;
          }
        }
      }

      // Match the opening tag.
      if (!scanner.scan(openingTagRe))
        break;

      hasTag = true;

      // Get the tag type.
      type = scanner.scan(tagRe) || 'name';
      scanner.scan(whiteRe);

      // Get the tag value.
      if (type === '=') {
        value = scanner.scanUntil(equalsRe);
        scanner.scan(equalsRe);
        scanner.scanUntil(closingTagRe);
      } else if (type === '{') {
        value = scanner.scanUntil(closingCurlyRe);
        scanner.scan(curlyRe);
        scanner.scanUntil(closingTagRe);
        type = '&';
      } else {
        value = scanner.scanUntil(closingTagRe);
      }

      // Match the closing tag.
      if (!scanner.scan(closingTagRe))
        throw new Error('Unclosed tag at ' + scanner.pos);

      if (type == '>') {
        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];
      } else {
        token = [ type, value, start, scanner.pos ];
      }
      tagIndex++;
      tokens.push(token);

      if (type === '#' || type === '^') {
        sections.push(token);
      } else if (type === '/') {
        // Check section nesting.
        openSection = sections.pop();

        if (!openSection)
          throw new Error('Unopened section "' + value + '" at ' + start);

        if (openSection[1] !== value)
          throw new Error('Unclosed section "' + openSection[1] + '" at ' + start);
      } else if (type === 'name' || type === '{' || type === '&') {
        nonSpace = true;
      } else if (type === '=') {
        // Set the tags for the next time around.
        compileTags(value);
      }
    }

    stripSpace();

    // Make sure there are no open sections when we're done.
    openSection = sections.pop();

    if (openSection)
      throw new Error('Unclosed section "' + openSection[1] + '" at ' + scanner.pos);

    return nestTokens(squashTokens(tokens));
  }

  /**
   * Combines the values of consecutive text tokens in the given `tokens` array
   * to a single token.
   */
  function squashTokens (tokens) {
    var squashedTokens = [];

    var token, lastToken;
    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {
      token = tokens[i];

      if (token) {
        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {
          lastToken[1] += token[1];
          lastToken[3] = token[3];
        } else {
          squashedTokens.push(token);
          lastToken = token;
        }
      }
    }

    return squashedTokens;
  }

  /**
   * Forms the given array of `tokens` into a nested tree structure where
   * tokens that represent a section have two additional items: 1) an array of
   * all tokens that appear in that section and 2) the index in the original
   * template that represents the end of that section.
   */
  function nestTokens (tokens) {
    var nestedTokens = [];
    var collector = nestedTokens;
    var sections = [];

    var token, section;
    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {
      token = tokens[i];

      switch (token[0]) {
        case '#':
        case '^':
          collector.push(token);
          sections.push(token);
          collector = token[4] = [];
          break;
        case '/':
          section = sections.pop();
          section[5] = token[2];
          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;
          break;
        default:
          collector.push(token);
      }
    }

    return nestedTokens;
  }

  /**
   * A simple string scanner that is used by the template parser to find
   * tokens in template strings.
   */
  function Scanner (string) {
    this.string = string;
    this.tail = string;
    this.pos = 0;
  }

  /**
   * Returns `true` if the tail is empty (end of string).
   */
  Scanner.prototype.eos = function eos () {
    return this.tail === '';
  };

  /**
   * Tries to match the given regular expression at the current position.
   * Returns the matched text if it can match, the empty string otherwise.
   */
  Scanner.prototype.scan = function scan (re) {
    var match = this.tail.match(re);

    if (!match || match.index !== 0)
      return '';

    var string = match[0];

    this.tail = this.tail.substring(string.length);
    this.pos += string.length;

    return string;
  };

  /**
   * Skips all text until the given regular expression can be matched. Returns
   * the skipped string, which is the entire tail if no match can be made.
   */
  Scanner.prototype.scanUntil = function scanUntil (re) {
    var index = this.tail.search(re), match;

    switch (index) {
      case -1:
        match = this.tail;
        this.tail = '';
        break;
      case 0:
        match = '';
        break;
      default:
        match = this.tail.substring(0, index);
        this.tail = this.tail.substring(index);
    }

    this.pos += match.length;

    return match;
  };

  /**
   * Represents a rendering context by wrapping a view object and
   * maintaining a reference to the parent context.
   */
  function Context (view, parentContext) {
    this.view = view;
    this.cache = { '.': this.view };
    this.parent = parentContext;
  }

  /**
   * Creates a new context using the given view with this context
   * as the parent.
   */
  Context.prototype.push = function push (view) {
    return new Context(view, this);
  };

  /**
   * Returns the value of the given name in this context, traversing
   * up the context hierarchy if the value is absent in this context's view.
   */
  Context.prototype.lookup = function lookup (name) {
    var cache = this.cache;

    var value;
    if (cache.hasOwnProperty(name)) {
      value = cache[name];
    } else {
      var context = this, intermediateValue, names, index, lookupHit = false;

      while (context) {
        if (name.indexOf('.') > 0) {
          intermediateValue = context.view;
          names = name.split('.');
          index = 0;

          /**
           * Using the dot notion path in `name`, we descend through the
           * nested objects.
           *
           * To be certain that the lookup has been successful, we have to
           * check if the last object in the path actually has the property
           * we are looking for. We store the result in `lookupHit`.
           *
           * This is specially necessary for when the value has been set to
           * `undefined` and we want to avoid looking up parent contexts.
           *
           * In the case where dot notation is used, we consider the lookup
           * to be successful even if the last "object" in the path is
           * not actually an object but a primitive (e.g., a string, or an
           * integer), because it is sometimes useful to access a property
           * of an autoboxed primitive, such as the length of a string.
           **/
          while (intermediateValue != null && index < names.length) {
            if (index === names.length - 1)
              lookupHit = (
                hasProperty(intermediateValue, names[index])
                || primitiveHasOwnProperty(intermediateValue, names[index])
              );

            intermediateValue = intermediateValue[names[index++]];
          }
        } else {
          intermediateValue = context.view[name];

          /**
           * Only checking against `hasProperty`, which always returns `false` if
           * `context.view` is not an object. Deliberately omitting the check
           * against `primitiveHasOwnProperty` if dot notation is not used.
           *
           * Consider this example:
           * ```
           * Mustache.render("The length of a football field is {{#length}}{{length}}{{/length}}.", {length: "100 yards"})
           * ```
           *
           * If we were to check also against `primitiveHasOwnProperty`, as we do
           * in the dot notation case, then render call would return:
           *
           * "The length of a football field is 9."
           *
           * rather than the expected:
           *
           * "The length of a football field is 100 yards."
           **/
          lookupHit = hasProperty(context.view, name);
        }

        if (lookupHit) {
          value = intermediateValue;
          break;
        }

        context = context.parent;
      }

      cache[name] = value;
    }

    if (isFunction(value))
      value = value.call(this.view);

    return value;
  };

  /**
   * A Writer knows how to take a stream of tokens and render them to a
   * string, given a context. It also maintains a cache of templates to
   * avoid the need to parse the same template twice.
   */
  function Writer () {
    this.templateCache = {
      _cache: {},
      set: function set (key, value) {
        this._cache[key] = value;
      },
      get: function get (key) {
        return this._cache[key];
      },
      clear: function clear () {
        this._cache = {};
      }
    };
  }

  /**
   * Clears all cached templates in this writer.
   */
  Writer.prototype.clearCache = function clearCache () {
    if (typeof this.templateCache !== 'undefined') {
      this.templateCache.clear();
    }
  };

  /**
   * Parses and caches the given `template` according to the given `tags` or
   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens
   * that is generated from the parse.
   */
  Writer.prototype.parse = function parse (template, tags) {
    var cache = this.templateCache;
    var cacheKey = template + ':' + (tags || mustache.tags).join(':');
    var isCacheEnabled = typeof cache !== 'undefined';
    var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;

    if (tokens == undefined) {
      tokens = parseTemplate(template, tags);
      isCacheEnabled && cache.set(cacheKey, tokens);
    }
    return tokens;
  };

  /**
   * High-level method that is used to render the given `template` with
   * the given `view`.
   *
   * The optional `partials` argument may be an object that contains the
   * names and templates of partials that are used in the template. It may
   * also be a function that is used to load partial templates on the fly
   * that takes a single argument: the name of the partial.
   *
   * If the optional `tags` argument is given here it must be an array with two
   * string values: the opening and closing tags used in the template (e.g.
   * [ "<%", "%>" ]). The default is to mustache.tags.
   */
  Writer.prototype.render = function render (template, view, partials, tags) {
    var tokens = this.parse(template, tags);
    var context = (view instanceof Context) ? view : new Context(view, undefined);
    return this.renderTokens(tokens, context, partials, template, tags);
  };

  /**
   * Low-level method that renders the given array of `tokens` using
   * the given `context` and `partials`.
   *
   * Note: The `originalTemplate` is only ever used to extract the portion
   * of the original template that was contained in a higher-order section.
   * If the template doesn't use higher-order sections, this argument may
   * be omitted.
   */
  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, tags) {
    var buffer = '';

    var token, symbol, value;
    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {
      value = undefined;
      token = tokens[i];
      symbol = token[0];

      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);
      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);
      else if (symbol === '>') value = this.renderPartial(token, context, partials, tags);
      else if (symbol === '&') value = this.unescapedValue(token, context);
      else if (symbol === 'name') value = this.escapedValue(token, context);
      else if (symbol === 'text') value = this.rawValue(token);

      if (value !== undefined)
        buffer += value;
    }

    return buffer;
  };

  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {
    var self = this;
    var buffer = '';
    var value = context.lookup(token[1]);

    // This function is used to render an arbitrary template
    // in the current context by higher-order sections.
    function subRender (template) {
      return self.render(template, context, partials);
    }

    if (!value) return;

    if (isArray(value)) {
      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {
        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);
      }
    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {
      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);
    } else if (isFunction(value)) {
      if (typeof originalTemplate !== 'string')
        throw new Error('Cannot use higher-order sections without the original template');

      // Extract the portion of the original template that the section contains.
      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);

      if (value != null)
        buffer += value;
    } else {
      buffer += this.renderTokens(token[4], context, partials, originalTemplate);
    }
    return buffer;
  };

  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {
    var value = context.lookup(token[1]);

    // Use JavaScript's definition of falsy. Include empty arrays.
    // See https://github.com/janl/mustache.js/issues/186
    if (!value || (isArray(value) && value.length === 0))
      return this.renderTokens(token[4], context, partials, originalTemplate);
  };

  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {
    var filteredIndentation = indentation.replace(/[^ \t]/g, '');
    var partialByNl = partial.split('\n');
    for (var i = 0; i < partialByNl.length; i++) {
      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {
        partialByNl[i] = filteredIndentation + partialByNl[i];
      }
    }
    return partialByNl.join('\n');
  };

  Writer.prototype.renderPartial = function renderPartial (token, context, partials, tags) {
    if (!partials) return;

    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];
    if (value != null) {
      var lineHasNonSpace = token[6];
      var tagIndex = token[5];
      var indentation = token[4];
      var indentedValue = value;
      if (tagIndex == 0 && indentation) {
        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);
      }
      return this.renderTokens(this.parse(indentedValue, tags), context, partials, indentedValue, tags);
    }
  };

  Writer.prototype.unescapedValue = function unescapedValue (token, context) {
    var value = context.lookup(token[1]);
    if (value != null)
      return value;
  };

  Writer.prototype.escapedValue = function escapedValue (token, context) {
    var value = context.lookup(token[1]);
    if (value != null)
      return mustache.escape(value);
  };

  Writer.prototype.rawValue = function rawValue (token) {
    return token[1];
  };

  var mustache = {
    name: 'mustache.js',
    version: '4.0.1',
    tags: [ '{{', '}}' ],
    clearCache: undefined,
    escape: undefined,
    parse: undefined,
    render: undefined,
    Scanner: undefined,
    Context: undefined,
    Writer: undefined,
    /**
     * Allows a user to override the default caching strategy, by providing an
     * object with set, get and clear methods. This can also be used to disable
     * the cache by setting it to the literal `undefined`.
     */
    set templateCache (cache) {
      defaultWriter.templateCache = cache;
    },
    /**
     * Gets the default or overridden caching object from the default writer.
     */
    get templateCache () {
      return defaultWriter.templateCache;
    }
  };

  // All high-level mustache.* functions use this writer.
  var defaultWriter = new Writer();

  /**
   * Clears all cached templates in the default writer.
   */
  mustache.clearCache = function clearCache () {
    return defaultWriter.clearCache();
  };

  /**
   * Parses and caches the given template in the default writer and returns the
   * array of tokens it contains. Doing this ahead of time avoids the need to
   * parse templates on the fly as they are rendered.
   */
  mustache.parse = function parse (template, tags) {
    return defaultWriter.parse(template, tags);
  };

  /**
   * Renders the `template` with the given `view` and `partials` using the
   * default writer. If the optional `tags` argument is given here it must be an
   * array with two string values: the opening and closing tags used in the
   * template (e.g. [ "<%", "%>" ]). The default is to mustache.tags.
   */
  mustache.render = function render (template, view, partials, tags) {
    if (typeof template !== 'string') {
      throw new TypeError('Invalid template! Template should be a "string" ' +
                          'but "' + typeStr(template) + '" was given as the first ' +
                          'argument for mustache#render(template, view, partials)');
    }

    return defaultWriter.render(template, view, partials, tags);
  };

  // Export the escaping function so that the user may override it.
  // See https://github.com/janl/mustache.js/issues/244
  mustache.escape = escapeHtml;

  // Export these mainly for testing, but also for advanced usage.
  mustache.Scanner = Scanner;
  mustache.Context = Context;
  mustache.Writer = Writer;

  return mustache;

})));


/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target, parent) {
  if (parent){
    return parent.querySelector(target);
  }
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target, parent) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target, parent);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(/*! ./urls */ "./node_modules/style-loader/lib/urls.js");

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertAt.before, target);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	if(options.attrs.nonce === undefined) {
		var nonce = getNonce();
		if (nonce) {
			options.attrs.nonce = nonce;
		}
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function getNonce() {
	if (false) {}

	return __webpack_require__.nc;
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = typeof options.transform === 'function'
		 ? options.transform(obj.css) 
		 : options.transform.default(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),

/***/ "./src/code.stub.html":
/*!****************************!*\
  !*** ./src/code.stub.html ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<span class=\"text-gray-500\">// tailwind.config.js</span><br>\nmodule.exports = {<br>\n&nbsp;&nbsp;theme: {<br>\n&nbsp;&nbsp;&nbsp;&nbsp;extend: {<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colors: {<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{name}}: {<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'50': &nbsp;'{{50}}',<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'100': '{{100}}',<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'200': '{{200}}',<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'300': '{{300}}',<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'400': '{{400}}',<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'500': '{{500}}',<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'600': '{{600}}',<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'700': '{{700}}',<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'800': '{{800}}',<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'900': '{{900}}',<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br>\n&nbsp;&nbsp;}<br>\n}";

/***/ }),

/***/ "./src/main.css":
/*!**********************!*\
  !*** ./src/main.css ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _simonwep_pickr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @simonwep/pickr */ "./node_modules/@simonwep/pickr/dist/pickr.min.js");
/* harmony import */ var _simonwep_pickr__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_simonwep_pickr__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _simonwep_pickr_dist_themes_nano_min_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @simonwep/pickr/dist/themes/nano.min.css */ "./node_modules/@simonwep/pickr/dist/themes/nano.min.css");
/* harmony import */ var _simonwep_pickr_dist_themes_nano_min_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_simonwep_pickr_dist_themes_nano_min_css__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./model */ "./src/model.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_model__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nameModel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nameModel */ "./src/nameModel.js");
/* harmony import */ var _nameModel__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nameModel__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mustache */ "./node_modules/mustache/mustache.js");
/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(mustache__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _code_stub_html__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./code.stub.html */ "./src/code.stub.html");
/* harmony import */ var _code_stub_html__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_code_stub_html__WEBPACK_IMPORTED_MODULE_5__);







function rgbToHex(r, g, b) {
  r = parseInt(r);
  g = parseInt(g);
  b = parseInt(b);
  return "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);
}

var pickrButton = _simonwep_pickr__WEBPACK_IMPORTED_MODULE_0___default.a.create({
  el: '.pickr',
  theme: 'nano',
  // or 'monolith', or 'nano'
  "default": '#2961B1',
  comparison: false,
  showAlways: true,
  container: '.pickr-ctrl',
  appClass: 'picker',
  useAsButton: true,
  components: {
    // Main components
    preview: true,
    opacity: false,
    hue: true,
    // Input / output Options
    interaction: {
      input: true
    }
  }
});
var output = _model__WEBPACK_IMPORTED_MODULE_2___default()('#376AB4');
draw(output);
pickrButton.on('change', function (instance) {
  output = _model__WEBPACK_IMPORTED_MODULE_2___default()(instance.toHEXA().toString());
  draw(output, document.querySelector('.name').value);
});
document.querySelector('.name').addEventListener('input', function (e) {
  var name = document.querySelector('.name').value;
  if (e.target.value !== '') name = e.target.value;
  draw(output, name);
});

function draw(output) {
  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'valencia';
  document.getElementById('output0.5').style.backgroundColor = 'rgb(' + output['r0.5'] * 255 + ',' + output['g0.5'] * 255 + ',' + output['b0.5'] * 255 + ')';
  document.getElementById('output1').style.backgroundColor = 'rgb(' + output.r1 * 255 + ',' + output.g1 * 255 + ',' + output.b1 * 255 + ')';
  document.getElementById('output2').style.backgroundColor = 'rgb(' + output.r2 * 255 + ',' + output.g2 * 255 + ',' + output.b2 * 255 + ')';
  document.getElementById('output3').style.backgroundColor = 'rgb(' + output.r3 * 255 + ',' + output.g3 * 255 + ',' + output.b3 * 255 + ')';
  document.getElementById('output4').style.backgroundColor = 'rgb(' + output.r4 * 255 + ',' + output.g4 * 255 + ',' + output.b4 * 255 + ')';
  document.getElementById('output5').style.backgroundColor = 'rgb(' + output.r5 * 255 + ',' + output.g5 * 255 + ',' + output.b5 * 255 + ')';
  document.getElementById('output6').style.backgroundColor = 'rgb(' + output.r6 * 255 + ',' + output.g6 * 255 + ',' + output.b6 * 255 + ')';
  document.getElementById('output7').style.backgroundColor = 'rgb(' + output.r7 * 255 + ',' + output.g7 * 255 + ',' + output.b7 * 255 + ')';
  document.getElementById('output8').style.backgroundColor = 'rgb(' + output.r8 * 255 + ',' + output.g8 * 255 + ',' + output.b8 * 255 + ')';
  document.getElementById('output9').style.backgroundColor = 'rgb(' + output.r9 * 255 + ',' + output.g9 * 255 + ',' + output.b9 * 255 + ')';
  document.getElementById('text0.5').style.color = 'rgb(' + output['r0.5'] * 255 + ',' + output['g0.5'] * 255 + ',' + output['b0.5'] * 255 + ')';
  document.getElementById('text1').style.color = 'rgb(' + output.r1 * 255 + ',' + output.g1 * 255 + ',' + output.b1 * 255 + ')';
  document.getElementById('text2').style.color = 'rgb(' + output.r2 * 255 + ',' + output.g2 * 255 + ',' + output.b2 * 255 + ')';
  document.getElementById('text3').style.color = 'rgb(' + output.r3 * 255 + ',' + output.g3 * 255 + ',' + output.b3 * 255 + ')';
  document.getElementById('text4').style.color = 'rgb(' + output.r4 * 255 + ',' + output.g4 * 255 + ',' + output.b4 * 255 + ')';
  document.getElementById('text5').style.color = 'rgb(' + output.r5 * 255 + ',' + output.g5 * 255 + ',' + output.b5 * 255 + ')';
  document.getElementById('text6').style.color = 'rgb(' + output.r6 * 255 + ',' + output.g6 * 255 + ',' + output.b6 * 255 + ')';
  document.getElementById('text7').style.color = 'rgb(' + output.r7 * 255 + ',' + output.g7 * 255 + ',' + output.b7 * 255 + ')';
  document.getElementById('text8').style.color = 'rgb(' + output.r8 * 255 + ',' + output.g8 * 255 + ',' + output.b8 * 255 + ')';
  document.getElementById('text9').style.color = 'rgb(' + output.r9 * 255 + ',' + output.g9 * 255 + ',' + output.b9 * 255 + ')';
  document.getElementById('hex0.5').innerHTML = rgbToHex(output['r0.5'] * 255, output['g0.5'] * 255, output['b0.5'] * 255);
  document.getElementById('hex1').innerHTML = rgbToHex(output.r1 * 255, output.g1 * 255, output.b1 * 255);
  document.getElementById('hex2').innerHTML = rgbToHex(output.r2 * 255, output.g2 * 255, output.b2 * 255);
  document.getElementById('hex3').innerHTML = rgbToHex(output.r3 * 255, output.g3 * 255, output.b3 * 255);
  document.getElementById('hex4').innerHTML = rgbToHex(output.r4 * 255, output.g4 * 255, output.b4 * 255);
  document.getElementById('hex5').innerHTML = rgbToHex(output.r5 * 255, output.g5 * 255, output.b5 * 255);
  document.getElementById('hex6').innerHTML = rgbToHex(output.r6 * 255, output.g6 * 255, output.b6 * 255);
  document.getElementById('hex7').innerHTML = rgbToHex(output.r7 * 255, output.g7 * 255, output.b7 * 255);
  document.getElementById('hex8').innerHTML = rgbToHex(output.r8 * 255, output.g8 * 255, output.b8 * 255);
  document.getElementById('hex9').innerHTML = rgbToHex(output.r9 * 255, output.g9 * 255, output.b9 * 255);

  var view = function view(output, name) {
    return {
      'name': name,
      '50': rgbToHex(output['r0.5'] * 255, output['g0.5'] * 255, output['b0.5'] * 255),
      '100': rgbToHex(output.r1 * 255, output.g1 * 255, output.b1 * 255),
      '200': rgbToHex(output.r2 * 255, output.g2 * 255, output.b2 * 255),
      '300': rgbToHex(output.r3 * 255, output.g3 * 255, output.b3 * 255),
      '400': rgbToHex(output.r4 * 255, output.g4 * 255, output.b4 * 255),
      '500': rgbToHex(output.r5 * 255, output.g5 * 255, output.b5 * 255),
      '600': rgbToHex(output.r6 * 255, output.g6 * 255, output.b6 * 255),
      '700': rgbToHex(output.r7 * 255, output.g7 * 255, output.b7 * 255),
      '800': rgbToHex(output.r8 * 255, output.g8 * 255, output.b8 * 255),
      '900': rgbToHex(output.r9 * 255, output.g9 * 255, output.b9 * 255)
    };
  };

  var colors = [];
  colors.push(_nameModel__WEBPACK_IMPORTED_MODULE_3___default()(rgbToHex(output.r4 * 255, output.g4 * 255, output.b4 * 255))[0]);
  colors.push(_nameModel__WEBPACK_IMPORTED_MODULE_3___default()(rgbToHex(output.r5 * 255, output.g5 * 255, output.b5 * 255))[0]);
  var sortable = [];

  for (var color in colors) {
    sortable.push([colors[color]]);
  }

  sortable.sort(function (a, b) {
    return b[1] - a[1];
  });
  if (document.querySelector('.name').value === '') name = sortable[0][0][0];
  document.querySelector('.code').innerHTML = mustache__WEBPACK_IMPORTED_MODULE_4___default.a.render(_code_stub_html__WEBPACK_IMPORTED_MODULE_5___default.a, view(output, name));
}

/***/ }),

/***/ "./src/model.js":
/*!**********************!*\
  !*** ./src/model.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

function model(input) {
  input = hexToRgb(input);
  return {
    'r0.5': 1 / (1 + 1 / Math.exp(3.7042856216430664 + 2.0558645725250244 * (input['r'] || 0) - 0.8052007555961609 * (input['g'] || 0) - 1.552907109260559 * (input['b'] || 0))),
    'g0.5': 1 / (1 + 1 / Math.exp(3.8202731609344482 - 0.9325829148292542 * (input['r'] || 0) + 1.6085227727890015 * (input['g'] || 0) - 1.0794157981872559 * (input['b'] || 0))),
    'b0.5': 1 / (1 + 1 / Math.exp(3.5643177032470703 - 0.9341196417808533 * (input['r'] || 0) - 1.1582318544387817 * (input['g'] || 0) + 2.1782171726226807 * (input['b'] || 0))),
    'r1': 1 / (1 + 1 / Math.exp(3.08162260055542 + 2.540830373764038 * (input['r'] || 0) - 1.3459936380386353 * (input['g'] || 0) - 1.2535480260849 * (input['b'] || 0))),
    'g1': 1 / (1 + 1 / Math.exp(3.455075740814209 - 1.0573184490203857 * (input['r'] || 0) + 1.9097195863723755 * (input['g'] || 0) - 1.1826997995376587 * (input['b'] || 0))),
    'b1': 1 / (1 + 1 / Math.exp(2.5855605602264404 - 0.49843427538871765 * (input['r'] || 0) - 2.069974184036255 * (input['g'] || 0) + 3.3401777744293213 * (input['b'] || 0))),
    'r2': 1 / (1 + 1 / Math.exp(2.187880516052246 + 2.8385674953460693 * (input['r'] || 0) - 1.8373974561691284 * (input['g'] || 0) - 1.1415364742279053 * (input['b'] || 0))),
    'g2': 1 / (1 + 1 / Math.exp(2.4381492137908936 - 1.0024542808532715 * (input['r'] || 0) + 1.7751426696777344 * (input['g'] || 0) - 1.1822043657302856 * (input['b'] || 0))),
    'b2': 1 / (1 + 1 / Math.exp(1.6965689659118652 - 0.47391772270202637 * (input['r'] || 0) - 2.8407387733459473 * (input['g'] || 0) + 3.6773550510406494 * (input['b'] || 0))),
    'r3': 1 / (1 + 1 / Math.exp(1.5726559162139893 + 3.6203320026397705 * (input['r'] || 0) - 2.7055838108062744 * (input['g'] || 0) - 0.9370414614677429 * (input['b'] || 0))),
    'g3': 1 / (1 + 1 / Math.exp(1.6196645498275757 - 1.0084878206253052 * (input['r'] || 0) + 1.4784040451049805 * (input['g'] || 0) - 0.8537490367889404 * (input['b'] || 0))),
    'b3': 1 / (1 + 1 / Math.exp(1.0520378351211548 - 0.7193269729614258 * (input['r'] || 0) - 3.905910015106201 * (input['g'] || 0) + 4.794988632202148 * (input['b'] || 0))),
    'r4': 1 / (1 + 1 / Math.exp(0.8504598736763 + 5.692114353179932 * (input['r'] || 0) - 4.25808572769165 * (input['g'] || 0) - 1.3120756149291992 * (input['b'] || 0))),
    'g4': 1 / (1 + 1 / Math.exp(0.7667722702026367 - 1.0021871328353882 * (input['r'] || 0) + 1.4443044662475586 * (input['g'] || 0) - 0.8525199890136719 * (input['b'] || 0))),
    'b4': 1 / (1 + 1 / Math.exp(0.3991137444972992 - 1.1908315420150757 * (input['r'] || 0) - 4.205316543579102 * (input['g'] || 0) + 5.516847133636475 * (input['b'] || 0))),
    'r5': 1 / (1 + 1 / Math.exp(0.21249565482139587 + 7.174017906188965 * (input['r'] || 0) - 5.066565990447998 * (input['g'] || 0) - 1.6897014379501343 * (input['b'] || 0))),
    'g5': 1 / (1 + 1 / Math.exp(0.057282425463199615 - 0.9389700293540955 * (input['r'] || 0) + 1.4874229431152344 * (input['g'] || 0) - 1.005987286567688 * (input['b'] || 0))),
    'b5': 1 / (1 + 1 / Math.exp(-0.24993392825126648 - 1.3151133060455322 * (input['r'] || 0) - 4.503207206726074 * (input['g'] || 0) + 6.139766216278076 * (input['b'] || 0))),
    'r6': 1 / (1 + 1 / Math.exp(-0.5724363923072815 + 6.213512897491455 * (input['r'] || 0) - 4.4133687019348145 * (input['g'] || 0) - 0.9409581422805786 * (input['b'] || 0))),
    'g6': 1 / (1 + 1 / Math.exp(-0.5009855031967163 - 1.229751467704773 * (input['r'] || 0) + 1.8716267347335815 * (input['g'] || 0) - 1.2199825048446655 * (input['b'] || 0))),
    'b6': 1 / (1 + 1 / Math.exp(-0.8754111528396606 - 1.6879245042800903 * (input['r'] || 0) - 4.369725227355957 * (input['g'] || 0) + 6.5891923904418945 * (input['b'] || 0))),
    'r7': 1 / (1 + 1 / Math.exp(-0.9251946210861206 + 4.724931240081787 * (input['r'] || 0) - 3.1520845890045166 * (input['g'] || 0) - 0.6375225782394409 * (input['b'] || 0))),
    'g7': 1 / (1 + 1 / Math.exp(-0.7819296717643738 - 1.2503910064697266 * (input['r'] || 0) + 1.8998196125030518 * (input['g'] || 0) - 1.1182212829589844 * (input['b'] || 0))),
    'b7': 1 / (1 + 1 / Math.exp(-1.061010479927063 - 1.1844040155410767 * (input['r'] || 0) - 3.317383289337158 * (input['g'] || 0) + 5.082843780517578 * (input['b'] || 0))),
    'r8': 1 / (1 + 1 / Math.exp(-1.2309277057647705 + 3.6269357204437256 * (input['r'] || 0) - 2.266681671142578 * (input['g'] || 0) - 0.4169546663761139 * (input['b'] || 0))),
    'g8': 1 / (1 + 1 / Math.exp(-1.1100859642028809 - 1.0724881887435913 * (input['r'] || 0) + 1.6812305450439453 * (input['g'] || 0) - 0.938539981842041 * (input['b'] || 0))),
    'b8': 1 / (1 + 1 / Math.exp(-1.2172935009002686 - 0.5440664887428284 * (input['r'] || 0) - 2.1265528202056885 * (input['g'] || 0) + 3.2103466987609863 * (input['b'] || 0))),
    'r9': 1 / (1 + 1 / Math.exp(-1.4962072372436523 + 2.6427834033966064 * (input['r'] || 0) - 1.4108394384384155 * (input['g'] || 0) - 0.5690018534660339 * (input['b'] || 0))),
    'g9': 1 / (1 + 1 / Math.exp(-1.336867094039917 - 0.9712502956390381 * (input['r'] || 0) + 1.4835888147354126 * (input['g'] || 0) - 0.6962610483169556 * (input['b'] || 0))),
    'b9': 1 / (1 + 1 / Math.exp(-1.4559218883514404 - 0.5221266150474548 * (input['r'] || 0) - 1.4842580556869507 * (input['g'] || 0) + 2.476011276245117 * (input['b'] || 0)))
  };
}

var hexToRgb = function hexToRgb(hex) {
  var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var arr = hex.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, function (m, r, g, b) {
    return '#' + r + r + g + g + b + b;
  }).substring(1).match(/.{2}/g).map(function (x) {
    return parseInt(x, 16);
  });
  var keys = ['r' + id, 'g' + id, 'b' + id];
  var output = {};
  keys.forEach(function (key, num) {
    output[key] = arr[num] / 255;
  });
  return output;
};

module.exports = model;

/***/ }),

/***/ "./src/nameModel.js":
/*!**************************!*\
  !*** ./src/nameModel.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

function model(input) {
  input = hexToRgb(input);
  var out = {
    'blue': 1 / (1 + 1 / Math.exp(-1.2852195501327515 + 2.1533777713775635 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 2.7493503093719482 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.0156563520431519 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 0.4677860736846924 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.08100791275501251 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 3.765671730041504 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 0.9758919477462769 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 2.1982386112213135 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 0.6702272891998291 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.3276476860046387 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 2.5109169483184814 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 2.8390185832977295 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.22161146998405457 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 6.179373264312744 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.021345853805542 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 2.631537437438965 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 0.8645004034042358 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 2.256258726119995 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 0.636561930179596 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 3.5242598056793213 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 2.402216911315918 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.3089911639690399 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 2.1073732376098633 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.16060899198055267 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.5863271951675415 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.5309228897094727 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.08998829871416092 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 0.40610596537590027 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 4.406829833984375 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.5455162525177002 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'navy': 1 / (1 + 1 / Math.exp(-2.209876775741577 + 3.012571334838867 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 4.417762756347656 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.8319976329803467 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 2.85585618019104 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.5815852284431458 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 0.5678855180740356 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.0776846408843994 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 2.2631845474243164 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 0.7236834764480591 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 2.199082851409912 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 4.353994846343994 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.962821125984192 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 2.038067102432251 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 4.1206183433532715 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 3.8741555213928223 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.44284874200820923 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.7476102113723755 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 1.2639658451080322 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.6434544324874878 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 2.2104945182800293 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 3.503028631210327 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.023904575034976006 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.1587040275335312 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 4.108703136444092 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 1.5650248527526855 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.0357117652893066 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 1.0915155410766602 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.7118581533432007 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 1.1387983560562134 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 2.370257616043091 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'sky': 1 / (1 + 1 / Math.exp(-1.9489585161209106 + 2.4783992767333984 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.23511718213558197 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 2.316862106323242 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 0.4387149214744568 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.745805025100708 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 7.160663604736328 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.025993870571255684 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 4.434638977050781 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 0.6869811415672302 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.2194870710372925 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 1.6881613731384277 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 3.49234938621521 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) + 0.16186094284057617 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 2.133967161178589 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 3.299060344696045 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 4.161435127258301 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.021353326737880707 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 2.4420692920684814 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 1.4107545614242554 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 3.4609479904174805 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 3.350956916809082 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.7382405400276184 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 0.37205731868743896 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 0.6958443522453308 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 3.5221011638641357 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.599146604537964 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.5041302442550659 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 1.1016517877578735 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.9393701553344727 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 2.7977330684661865 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'teal': 1 / (1 + 1 / Math.exp(-1.9407466650009155 - 2.7149722576141357 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.03281877562403679 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 0.0885806605219841 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 2.9510326385498047 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.07469923049211502 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 3.499169111251831 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 0.15324001014232635 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.075534701347351 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 2.5173635482788086 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.9125692248344421 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.1677534580230713 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 3.5997214317321777 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.41113054752349854 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 2.123173952102661 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 6.14152193069458 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 2.5917623043060303 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 0.5273621082305908 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 2.5127086639404297 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.7354992628097534 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.7762404680252075 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 1.177168846130371 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) + 0.52178555727005 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 2.945082426071167 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.8361685276031494 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 2.188366651535034 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.1167449951171875 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.34648624062538147 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 0.48022347688674927 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.2537670135498047 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.9651596546173096 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'indigo': 1 / (1 + 1 / Math.exp(-0.7356444001197815 - 0.596992552280426 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.10693418979644775 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.360774040222168 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 2.1669647693634033 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.4618614912033081 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.24524150788784027 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.7307788133621216 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 2.6193430423736572 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 1.2357771396636963 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) + 0.029047491028904915 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.8175811767578125 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.36597442626953125 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.8105354905128479 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 3.6118102073669434 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.697239875793457 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 1.8390470743179321 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.6353989839553833 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.6790255308151245 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.6454424858093262 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 0.9197628498077393 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.4282117486000061 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.2611757218837738 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 0.22939397394657135 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 2.5087811946868896 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 1.3057435750961304 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 0.7974563837051392 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.0649559274315834 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.31039127707481384 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.7578980922698975 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.8677447438240051 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'cobalt': 1 / (1 + 1 / Math.exp(-1.692253828048706 + 0.9815819263458252 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 1.8296188116073608 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.005161646753549576 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 0.08040229976177216 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.12173907458782196 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 2.9811606407165527 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 1.3641993999481201 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 2.6519579887390137 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 0.14247453212738037 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.389824628829956 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.4711649417877197 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.37862831354141235 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.04534027352929115 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 3.6752305030822754 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.4254868030548096 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 5.5162272453308105 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 1.5908770561218262 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 3.752147912979126 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.6453037858009338 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 2.9666740894317627 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 2.2028098106384277 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.2474753856658936 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 1.2066601514816284 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 1.4468154907226562 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 3.2570526599884033 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.121246814727783 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.05903986096382141 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.0356389284133911 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 4.74775505065918 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 2.082951307296753 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'ocean': 1 / (1 + 1 / Math.exp(-1.8845049142837524 + 0.05867090821266174 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 2.247894763946533 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.432279586791992 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 2.525286912918091 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.2665932178497314 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.869301438331604 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.22688433527946472 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.4876854121685028 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 1.9061601161956787 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.4189332723617554 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 0.5056039094924927 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 3.4041900634765625 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.300278663635254 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.8699281215667725 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.413062810897827 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 1.5701807737350464 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 1.8798257112503052 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 4.545230388641357 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.7532743811607361 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 3.2159156799316406 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 1.727177619934082 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.9380860924720764 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.45759353041648865 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 2.9004855155944824 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.2615824043750763 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.2987799644470215 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.1564796268939972 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.486004501581192 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 4.000998020172119 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.504892110824585 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'peacock': 1 / (1 + 1 / Math.exp(-1.762104868888855 + 2.355806827545166 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 4.622653484344482 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.127027988433838 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 1.2860034704208374 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.7179293632507324 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.1450831890106201 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.3926572799682617 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 1.2550638914108276 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 2.123291254043579 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.9946107864379883 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 2.436530828475952 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 4.613877296447754 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.8850065469741821 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 3.856431722640991 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 3.8090767860412598 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.21850697696208954 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.5548704862594604 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.20194511115550995 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 0.2979152798652649 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 2.3206870555877686 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 3.7469065189361572 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.30339914560317993 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.768800675868988 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 3.3633697032928467 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.6969180703163147 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.8179454803466797 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 1.10844087600708 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 2.4770240783691406 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 3.260399341583252 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 2.2971510887145996 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'azure': 1 / (1 + 1 / Math.exp(-1.508057951927185 + 1.5661046504974365 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 2.379694938659668 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.6470634937286377 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 0.35130730271339417 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.11750677227973938 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.9883092641830444 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.0946341753005981 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.8060258626937866 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 0.49115532636642456 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.2016860246658325 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 3.246715784072876 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 2.104203701019287 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.6993496417999268 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 2.080618143081665 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.6596786975860596 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 1.3569742441177368 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 1.572230577468872 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 3.9595463275909424 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.7005533576011658 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 2.066887617111206 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 1.2738806009292603 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.392850637435913 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.5582079291343689 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 0.8148645162582397 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 2.5416769981384277 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.1614644527435303 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.5003991723060608 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.728561520576477 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 0.2992475926876068 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.4709193706512451 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'cerulean': 1 / (1 + 1 / Math.exp(-0.9666979908943176 + 0.6720466613769531 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 1.152414321899414 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.4192628860473633 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 1.0895648002624512 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.8118235468864441 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 3.7005767822265625 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.3909186124801636 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.6100924015045166 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 2.4995031356811523 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.1536298990249634 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 0.9130479693412781 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 2.5638487339019775 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.7671868205070496 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 4.547449111938477 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 1.7964335680007935 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 2.7238221168518066 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 0.4242234528064728 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 2.0349209308624268 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 0.22731177508831024 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 3.6112778186798096 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 1.8339178562164307 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.5543504953384399 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 2.3797876834869385 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 4.293056011199951 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 2.940174102783203 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 0.631873369216919 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.40261873602867126 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.3003923296928406 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.911582112312317 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.8549036979675293 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'stone': 1 / (1 + 1 / Math.exp(-0.6609076857566833 - 3.966871976852417 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.22500653564929962 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.677490472793579 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 2.256425619125366 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.5020030736923218 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.44553276896476746 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 0.4994288682937622 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 0.3364733159542084 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 2.2352774143218994 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.7491008043289185 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 4.690426826477051 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 3.281543016433716 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.4638326168060303 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.1020798683166504 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 3.074506998062134 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.8295440077781677 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 1.6679162979125977 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 3.275452136993408 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.0667562410235405 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 3.2150771617889404 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.06773728877305984 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.5156133770942688 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.6157028675079346 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 0.02126188576221466 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.3578335046768188 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.3580487966537476 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.011743586510419846 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.9939550161361694 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.9009673595428467 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.5479897260665894 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'berry': 1 / (1 + 1 / Math.exp(-1.4473024606704712 + 1.685437560081482 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 2.27207350730896 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.745187282562256 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 2.0586745738983154 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.36828064918518066 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 0.19156241416931152 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 2.015521287918091 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 2.628819704055786 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 2.524059772491455 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.0585978031158447 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 3.1583924293518066 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 1.6528371572494507 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 2.002871036529541 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 4.168241024017334 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 3.3533382415771484 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 2.729645252227783 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.788649559020996 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.007590318098664284 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 1.1783891916275024 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.2551484107971191 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 1.4098962545394897 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.1521281003952026 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 0.20435452461242676 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.6717562079429626 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.9940738081932068 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.3990848064422607 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.9061648845672607 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.2618592977523804 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 0.6592738628387451 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.0613555908203125 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'denim': 1 / (1 + 1 / Math.exp(-1.0857813358306885 + 1.3942255973815918 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 1.09954833984375 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.104012131690979 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 1.2039220333099365 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.635749340057373 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.16981583833694458 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.2490336894989014 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.3187336921691895 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 0.8800622224807739 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.6874350905418396 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 1.2217519283294678 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 0.1949421763420105 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.0112128257751465 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 1.8552218675613403 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 3.8111367225646973 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.3260062038898468 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.9283777475357056 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.7920134663581848 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.4180925488471985 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.2484389543533325 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 1.1675186157226562 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.9617184996604919 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.22771655023097992 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.7235969305038452 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.665733277797699 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.2352321147918701 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.11594986170530319 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.8683873414993286 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 0.29462161660194397 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.0978230237960815 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'admiral': 1 / (1 + 1 / Math.exp(-2.415822744369507 + 3.0833311080932617 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 5.175624370574951 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 3.1638453006744385 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 0.49826568365097046 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.6129463911056519 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.955127477645874 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 2.022542715072632 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 3.812481164932251 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 1.3563264608383179 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 2.7832255363464355 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 4.747814178466797 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.9139297604560852 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.3996862173080444 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 3.808035135269165 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 3.1340060234069824 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.624907910823822 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 0.8071579933166504 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 4.070333480834961 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.3277318477630615 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 3.5046169757843018 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 3.4873404502868652 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.6036670207977295 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.5082842707633972 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.2751420736312866 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 0.48835718631744385 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.0537772178649902 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 1.117395043373108 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 3.0318527221679688 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 2.931159019470215 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 2.859066963195801 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'beige': 1 / (1 + 1 / Math.exp(-3.3666114807128906 - 2.2378334999084473 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 1.664604902267456 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 1.3217805624008179 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 0.7421332597732544 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.9813456535339355 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 3.7378056049346924 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 0.6800774335861206 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 2.0181620121002197 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 3.8689675331115723 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.0718201398849487 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.27337384223938 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 4.954073429107666 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) + 0.17564955353736877 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.9729156494140625 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 1.2094595432281494 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 4.067967414855957 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 2.801486015319824 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 5.1517181396484375 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 4.929630279541016 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 0.40942496061325073 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.6154361963272095 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 2.4441020488739014 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 2.6605141162872314 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 2.097935914993286 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 3.332195520401001 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 0.6130387783050537 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.5743521451950073 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 1.2612648010253906 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.217125177383423 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 0.9177377223968506 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'macaroon': 1 / (1 + 1 / Math.exp(-1.4828917980194092 - 0.9258130788803101 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.44652122259140015 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 1.0717178583145142 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 2.414527654647827 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.9252535104751587 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 2.4605255126953125 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.11379604786634445 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.5715469121932983 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.2025392055511475 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.5988582372665405 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.9183892607688904 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 2.461212158203125 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.03267534077167511 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.524247944355011 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.7360963821411133 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 2.801563262939453 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 0.32002338767051697 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 2.2348947525024414 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 2.189866065979004 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.059578895568847656 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.56812584400177 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.974523901939392 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.1513967514038086 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 2.142554759979248 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 2.3234567642211914 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 1.2998428344726562 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.590043842792511 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 0.38054540753364563 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.3897323608398438 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 1.076011300086975 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'coffee': 1 / (1 + 1 / Math.exp(-1.03926420211792 - 2.6909549236297607 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.15148815512657166 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.7973009347915649 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 1.8583635091781616 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.18725845217704773 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 1.818173885345459 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.9326732158660889 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.5272727012634277 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 1.8422902822494507 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.0327500104904175 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.9757723808288574 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 2.5898354053497314 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.3536311388015747 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 2.9200220108032227 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.1873066425323486 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.9758312702178955 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 0.27192386984825134 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 1.5536084175109863 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.8492697477340698 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.40788137912750244 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 1.4576843976974487 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.4085019826889038 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 3.336718797683716 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 2.1234240531921387 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.0504902601242065 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 3.4803380966186523 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.2318733036518097 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.498082160949707 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.3241795301437378 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 2.072631597518921 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'granola': 1 / (1 + 1 / Math.exp(-0.6288396120071411 - 0.5684429407119751 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.005063788499683142 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.5774814486503601 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.8695032596588135 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.025605252012610435 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 1.6899513006210327 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.39575573801994324 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.7531490325927734 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 2.3158230781555176 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.7092069983482361 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.6568602323532104 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.0009324550628662 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.15234316885471344 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.5965998768806458 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 1.1514078378677368 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 1.6343597173690796 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.0816103219985962 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.06669732183218002 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 0.18710142374038696 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.41597995162010193 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.0037913944106549025 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.7478680610656738 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.0120713710784912 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 0.9101045727729797 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.7610564231872559 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.686214804649353 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.9039879441261292 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.2707386016845703 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.0071802139282227 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.4273236989974976 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'sepia': 1 / (1 + 1 / Math.exp(-0.893217921257019 - 0.8105759024620056 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.041921306401491165 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.40335240960121155 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.1718471050262451 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.5382125973701477 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 1.961241364479065 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.5147022008895874 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.0279794931411743 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 0.3875676989555359 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.7225970029830933 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.7282454967498779 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.2767250537872314 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.3051004707813263 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.5202784538269043 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.8401479125022888 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 1.1427747011184692 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.3908519446849823 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.8186092972755432 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.022852588444948196 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.0334300771355629 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.015896879136562347 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.0522552728652954 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 0.8795152902603149 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 1.570131778717041 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.2949515581130981 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 0.6304450631141663 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.1359996199607849 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.9100080728530884 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 0.9948585033416748 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.9193047285079956 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'latte': 1 / (1 + 1 / Math.exp(-0.7786070704460144 - 0.9653443694114685 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.34195998311042786 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 0.049371056258678436 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.5013947486877441 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.7949859499931335 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 2.0678083896636963 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.48894214630126953 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.0526397228240967 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 0.27726319432258606 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.4488682448863983 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.7164627909660339 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.5447252988815308 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.33348679542541504 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.5194625854492188 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.7658967971801758 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 1.34754478931427 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 0.024472272023558617 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 1.326271891593933 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.6155209541320801 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.22458982467651367 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.30543410778045654 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.098862648010254 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.0171973705291748 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 1.7130825519561768 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.17755126953125 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 0.336071640253067 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.24212044477462769 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.727401077747345 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 0.9205511212348938 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.4319494664669037 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'hazelnut': 1 / (1 + 1 / Math.exp(-0.3467177152633667 - 0.9671742916107178 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.22790409624576569 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.4838286638259888 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.4332876205444336 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.37924444675445557 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 1.5286297798156738 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.6443038582801819 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 0.23001474142074585 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.0979312658309937 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.7213935256004333 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.9812682867050171 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.1937532424926758 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.08643320947885513 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.9452418684959412 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 1.2629903554916382 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 1.256300687789917 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.051027536392212 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.04561436176300049 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 0.9917928576469421 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.7912514209747314 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.20477578043937683 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.6892549395561218 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.649573802947998 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 0.5652878284454346 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.755384087562561 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.654820203781128 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.8382408618927002 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.480797529220581 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 0.8743511438369751 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 2.075409173965454 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'sandcastle': 1 / (1 + 1 / Math.exp(-0.7198446393013 - 0.932496964931488 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.09149622172117233 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.49929699301719666 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 0.9295103549957275 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.18911640346050262 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 1.730946660041809 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.3835850656032562 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 0.5703402757644653 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 0.40745770931243896 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.6605862379074097 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.1278340816497803 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.4684152603149414 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.5577108263969421 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.183752179145813 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.8695695400238037 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 1.2926357984542847 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 0.3019418716430664 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 1.030343770980835 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.2729799151420593 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 0.03168509528040886 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.05517614632844925 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.5902307033538818 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.2175090312957764 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 1.0593066215515137 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 0.9854775667190552 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.5436410903930664 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.19988036155700684 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.9484735727310181 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 0.8989436030387878 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.2744041681289673 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'yellow': 1 / (1 + 1 / Math.exp(-1.9039175510406494 - 1.1519421339035034 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.8926568627357483 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.1518208980560303 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 2.2436444759368896 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.9199514389038086 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 5.878462791442871 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 1.8845776319503784 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.25079673528671265 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 2.584001302719116 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) + 0.15094305574893951 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.9035692811012268 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 4.184399127960205 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 2.4128623008728027 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.2690630257129669 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.4289454519748688 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.10581566393375397 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 2.6161324977874756 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.9556532502174377 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 2.1050238609313965 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.7446808218955994 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.6295540928840637 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) + 1.694105625152588 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.0486805438995361 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 4.975577354431152 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 1.624912142753601 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 0.41814684867858887 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 3.26873779296875 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 2.6300692558288574 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.21308970451355 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 0.5165593028068542 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'canary': 1 / (1 + 1 / Math.exp(-1.240821361541748 - 0.7855237722396851 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.44715750217437744 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.7415839433670044 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.82725191116333 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.15093930065631866 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 3.6842849254608154 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.8876670002937317 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.588545024394989 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 2.081162452697754 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.33018115162849426 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.78798508644104 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 3.438201904296875 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.888982892036438 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.0271273851394653 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.13012096285820007 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 1.9108388423919678 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 2.3243696689605713 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 1.3333081007003784 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 1.0717883110046387 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.2170412242412567 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.21151021122932434 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) + 0.3403555154800415 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.1585524082183838 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 2.747030258178711 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 1.8562448024749756 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.04663381725549698 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 2.72187876701355 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.1267373114824295 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.6472452878952026 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.1877262145280838 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'gold': 1 / (1 + 1 / Math.exp(-1.3840628862380981 - 1.001170039176941 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.29837241768836975 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.89007967710495 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.4630098342895508 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 2.758655548095703 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 1.6452490091323853 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 3.1624274253845215 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.5997318029403687 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.851210594177246 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.47202229499816895 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.9747695326805115 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 3.3974881172180176 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.8832725286483765 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.1834914684295654 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.37009868025779724 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 1.6418049335479736 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 2.2804853916168213 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.9762569665908813 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 2.104311943054199 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 1.6817458868026733 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.30236706137657166 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.3641626834869385 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.6898698806762695 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.5287322998046875 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.8123608231544495 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 1.8090523481369019 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 3.5343313217163086 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.4948064088821411 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.824036955833435 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 1.2115062475204468 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'butter': 1 / (1 + 1 / Math.exp(-1.323425054550171 - 1.0271053314208984 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.5185050368309021 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 0.8738269209861755 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 2.2906265258789062 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.6801984906196594 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 3.580277442932129 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 0.6034910678863525 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.7829060554504395 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 2.8530895709991455 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.2838817834854126 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.8493842482566833 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 2.2081449031829834 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.6855264902114868 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.676143229007721 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.038205523043870926 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 3.1928234100341797 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 2.713589668273926 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.9748766422271729 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 1.4015185832977295 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.6553138494491577 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.22142605483531952 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.3439677655696869 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.029301643371582 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.4816222190856934 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 2.213437080383301 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.4087318778038025 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.5982802510261536 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 0.5622350573539734 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.4844541549682617 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 0.5061144232749939 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'lemon': 1 / (1 + 1 / Math.exp(-2.021679162979126 - 1.286657691001892 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.8389078378677368 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 0.7395111322402954 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 3.5628879070281982 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 1.102966547012329 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 3.4638307094573975 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 1.5076829195022583 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 2.347079038619995 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 4.380400657653809 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.3951248228549957 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.3695489168167114 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 4.534185886383057 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.7453914880752563 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.2112809419631958 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 1.3292070627212524 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 4.034078598022461 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 1.1384239196777344 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 4.454996585845947 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 2.9218037128448486 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.29290464520454407 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.6047305464744568 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) + 1.113021969795227 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.9010212421417236 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 4.571094512939453 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 2.474186658859253 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.4881479740142822 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.16857576370239258 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 1.6920764446258545 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.463932991027832 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 0.18841968476772308 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'mustard': 1 / (1 + 1 / Math.exp(-0.6880623698234558 - 0.9095277190208435 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.1930718719959259 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.6503744125366211 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.6770329475402832 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.20315439999103546 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 2.266403913497925 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.1975853443145752 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.6951799392700195 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.801164984703064 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.4610268771648407 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.8638362884521484 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.6172395944595337 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.01933511160314083 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.8103330731391907 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.7532240748405457 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.21141840517520905 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.9000808000564575 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 1.4660065174102783 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.3363810181617737 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.4319739043712616 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.25514307618141174 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.7038690447807312 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.0430908203125 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.09642556309700012 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.5293875932693481 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 0.9413166642189026 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 1.0473699569702148 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.380356788635254 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.023930549621582 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.0244624614715576 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'honey': 1 / (1 + 1 / Math.exp(-1.1923774480819702 - 1.0018463134765625 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.022619282826781273 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.4002587795257568 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.3780314922332764 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.1045957803726196 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.326451301574707 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 2.2394120693206787 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.4923531115055084 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.237372875213623 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.7489806413650513 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.8999312520027161 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 3.330922842025757 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.9988310933113098 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.1909520626068115 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.23063139617443085 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 1.1027384996414185 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.5616601705551147 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.3022578954696655 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 1.8596872091293335 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 1.3804333209991455 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.08497876673936844 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.5976334810256958 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 2.138857364654541 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.860785961151123 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.5585378408432007 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 0.09673408418893814 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 1.6168756484985352 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.4239907264709473 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.8950244188308716 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.15427647531032562 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'blonde': 1 / (1 + 1 / Math.exp(-1.802383542060852 - 1.0888750553131104 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.9969580769538879 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 1.3050956726074219 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 2.924098014831543 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.547940969467163 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 2.8437178134918213 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 0.051714710891246796 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 1.1651124954223633 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.5524566173553467 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.5127160549163818 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.1862359046936035 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 2.9870645999908447 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) + 0.05786912515759468 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.48626208305358887 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.8464004993438721 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 3.5925769805908203 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 0.9504417181015015 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 2.873756170272827 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 2.4675934314727783 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 0.11546812951564789 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.4208323657512665 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.3192189931869507 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.5532424449920654 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 2.1072776317596436 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 3.0387141704559326 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 1.2147741317749023 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.6141690611839294 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 0.6576437950134277 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.8285372257232666 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 1.2790863513946533 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'pineapple': 1 / (1 + 1 / Math.exp(-1.2737520933151245 - 1.040945053100586 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.2630336284637451 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 1.0529496669769287 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 2.4963932037353516 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.524577260017395 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 3.5583419799804688 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 0.5672884583473206 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.8535904884338379 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 3.3533570766448975 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.5330873727798462 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.962661623954773 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 2.2918102741241455 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.4667153060436249 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.6530247330665588 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.20472835004329681 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 3.908825635910034 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 2.692324161529541 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 1.000683069229126 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 1.396647572517395 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.49117186665534973 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.5644748210906982 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.2916285991668701 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.071873664855957 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.4486801624298096 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 3.001786708831787 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.7467257976531982 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.07778627425432205 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 0.6313194036483765 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.707118272781372 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 0.7148377895355225 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'orange': 1 / (1 + 1 / Math.exp(-1.8074185848236084 - 1.1692451238632202 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.6801629066467285 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 0.3470357060432434 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.3197654485702515 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 2.98054575920105 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 1.2315906286239624 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 2.299137830734253 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 1.787686824798584 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.8711026906967163 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.5499247312545776 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.0663853883743286 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.5973212718963623 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.3537607192993164 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.5810943841934204 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.7172910571098328 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.6675533056259155 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.9158631563186646 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.1917429119348526 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 2.7179107666015625 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 1.847411036491394 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.20038574934005737 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.9549896717071533 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.8391845226287842 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 1.3013780117034912 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.7800559997558594 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 1.3589987754821777 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 3.0123775005340576 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.2303121089935303 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.773060917854309 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 1.30729079246521 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'tangerine': 1 / (1 + 1 / Math.exp(-1.8038183450698853 - 1.0238069295883179 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.6651089191436768 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 0.17951977252960205 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.5594233274459839 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.6130989789962769 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 1.090663194656372 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.5698920488357544 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 1.7610924243927002 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 2.9397552013397217 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.6757381558418274 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.0423665046691895 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.5248685479164124 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.6774324774742126 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 2.4549481868743896 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.6221423149108887 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 1.0934275388717651 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.9970885515213013 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.8024569749832153 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 1.8382718563079834 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 1.2407493591308594 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.6389543414115906 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.7271586656570435 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.2988338470458984 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 2.440457820892334 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 3.2250397205352783 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.09688806533813477 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.8702980875968933 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.3197520971298218 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.2129955291748047 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.08845803886651993 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'cider': 1 / (1 + 1 / Math.exp(-1.1368070840835571 - 0.8741949200630188 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.14242501556873322 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.9727988839149475 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.3625404834747314 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.14780031144618988 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.4853447675704956 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.0344350337982178 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 0.4361173212528229 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.5539865493774414 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.7152829170227051 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.4137158393859863 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 0.5768954753875732 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.2878921329975128 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.8027269840240479 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 1.4580297470092773 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.5474562644958496 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.6544066667556763 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.42919811606407166 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.4489784836769104 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 0.9968761801719666 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.06701749563217163 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.7477746605873108 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 3.1288247108459473 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 0.4284151494503021 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.6901333332061768 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.738907814025879 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 1.305589199066162 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.7385110855102539 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.3927595615386963 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.8070900440216064 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'rust': 1 / (1 + 1 / Math.exp(-1.8066246509552002 - 3.2154157161712646 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.6699579954147339 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.286015748977661 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.8370871543884277 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.43602046370506287 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.4856897294521332 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.3875670433044434 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.9947167634963989 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.2208188772201538 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.0221729278564453 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 3.1525003910064697 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.409157156944275 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.6536668539047241 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 2.4157440662384033 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 2.0601484775543213 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.0945565402507782 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.1939030885696411 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.4290790855884552 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.3791928291320801 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 3.857553720474243 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.8953520655632019 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.4282335638999939 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 0.021132610738277435 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 3.4582388401031494 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 1.1810481548309326 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.253887891769409 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 2.8056466579437256 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.8872645497322083 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.186315655708313 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.813040018081665 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'ginger': 1 / (1 + 1 / Math.exp(-1.4442567825317383 - 1.3077651262283325 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.0633905678987503 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.118891477584839 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.3066076040267944 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.9749419689178467 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.9875961542129517 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.4298830032348633 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.6320034265518188 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.2423312664031982 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.7438249588012695 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.1149696111679077 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 0.6047196984291077 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.5473648309707642 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.6870591640472412 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.004638539627194405 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.5383169054985046 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.2030558586120605 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.31089016795158386 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.9897634387016296 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 3.416367769241333 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.3452198803424835 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.5500885844230652 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 3.4078681468963623 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 2.7507805824279785 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 1.5222049951553345 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.14249807596206665 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 2.5844483375549316 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.1043999195098877 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.0365731716156006 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.10362684726715088 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'bronze': 1 / (1 + 1 / Math.exp(-1.026771903038025 - 1.4387637376785278 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.8653549551963806 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.5378937721252441 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.143342137336731 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.3337133824825287 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.5814756155014038 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.0561561584472656 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.018379241228103638 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.2112160921096802 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.6776121258735657 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.4694418907165527 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 0.4631572365760803 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.5210161805152893 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.0135722160339355 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.760123610496521 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.16681204736232758 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.0923265218734741 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.12929503619670868 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.295600950717926 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 3.0155856609344482 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.3437194228172302 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.4013839066028595 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 3.2907330989837646 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.383418083190918 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.24975299835205078 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.1010793447494507 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.6520517468452454 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.8827345967292786 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.7588081359863281 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.269573450088501 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'apricot': 1 / (1 + 1 / Math.exp(-1.1288249492645264 - 0.9171193242073059 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.07608963549137115 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.5295760035514832 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.0413074493408203 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.4817755222320557 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.0824378728866577 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.725403070449829 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.6611179709434509 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.387032151222229 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.7547151446342468 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.9580474495887756 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 0.6155939698219299 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.9612108469009399 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.1381498575210571 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.19663368165493011 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.38440099358558655 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.2413691282272339 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.10194316506385803 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 1.5042240619659424 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.7140000462532043 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.12301889806985855 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.9138501286506653 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.8045477867126465 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.45164477825164795 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 0.7583581209182739 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.3325900137424469 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 1.7059630155563354 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.1022754907608032 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.8737173080444336 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 0.04719499126076698 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'carrot': 1 / (1 + 1 / Math.exp(-1.7026429176330566 - 0.8692517876625061 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.3861388564109802 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.9641052484512329 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.1730120182037354 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.9621851444244385 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.7706738710403442 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.7941958904266357 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.643624484539032 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.513498306274414 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.0519860982894897 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.9052156805992126 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 1.697926640510559 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.1563838720321655 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 2.2684457302093506 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.6443287134170532 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.35280343890190125 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.161081314086914 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.2737383246421814 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 1.7224284410476685 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.10189688205718994 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.3170052766799927 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.6739141941070557 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 2.396573543548584 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 1.1435497999191284 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.04636812210083 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.13928520679473877 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 1.7818573713302612 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.2441096305847168 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.442086696624756 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.25072309374809265 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'marmalade': 1 / (1 + 1 / Math.exp(-1.7483388185501099 - 1.427645206451416 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.03113235905766487 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.1388301849365234 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.4773133993148804 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 2.6753478050231934 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 3.267117977142334 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 2.4577696323394775 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.8875753283500671 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.4398632049560547 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.1957582235336304 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.3296804428100586 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.6872429251670837 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.8496416807174683 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.9636932611465454 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.9046115279197693 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.5498038530349731 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.6222059726715088 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.5883153676986694 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 2.7870755195617676 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 2.104898691177368 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.23967789113521576 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.5568668842315674 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 4.595987796783447 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.9361013174057007 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.9885190725326538 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 1.882482647895813 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 3.4885401725769043 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.6979413032531738 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.235901117324829 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 1.4419244527816772 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'red': 1 / (1 + 1 / Math.exp(-2.1488685607910156 - 1.2883398532867432 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.4814308285713196 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 1.0349985361099243 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 2.528959274291992 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 3.4845194816589355 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.37601900100708 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 2.3080813884735107 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.0262069702148438 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 3.9886832237243652 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.8329911231994629 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.257622480392456 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 1.1255797147750854 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.6793490648269653 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 1.1994273662567139 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.9371550679206848 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.6931606531143188 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 2.897822380065918 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.5689089298248291 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 3.6259655952453613 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 1.3841866254806519 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 1.118940830230713 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 2.4022305011749268 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 4.534173488616943 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 1.4375954866409302 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 3.6508047580718994 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.7708714008331299 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 4.470983982086182 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.8529052734375 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 0.0704820528626442 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 2.228888511657715 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'cherry': 1 / (1 + 1 / Math.exp(-0.9254932999610901 - 1.5680543184280396 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.6229294538497925 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.3865169286727905 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.5152554512023926 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.6586476564407349 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.1502179652452469 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.1088186502456665 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.39875873923301697 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.2293058633804321 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.9257940649986267 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.7504220008850098 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.2260085642337799 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.4109392166137695 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.03713153302669525 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.7353625297546387 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.17452748119831085 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.4038842916488647 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.3156879246234894 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.49819254875183105 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.7359592914581299 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.11760888248682022 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.9711180925369263 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.4002077877521515 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.7139674425125122 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.8456826210021973 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.7448192238807678 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 2.0564708709716797 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.1533483266830444 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 0.4754171669483185 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.035365648567676544 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'rose': 1 / (1 + 1 / Math.exp(-1.4897654056549072 - 1.7072701454162598 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.6058120727539062 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.8635457158088684 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 2.7824034690856934 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.718037486076355 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.4529681205749512 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.3720744848251343 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 4.232090950012207 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 3.0576915740966797 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.041584849357605 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.805546522140503 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.19578133523464203 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.9137652516365051 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 5.696580410003662 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.12172175198793411 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 2.4456746578216553 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 2.099609136581421 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.589152455329895 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.07295839488506317 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 2.931612253189087 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.7422968149185181 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.805781602859497 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 3.6163103580474854 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 2.5642879009246826 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 3.081808090209961 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.2257283478975296 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 1.7603282928466797 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.3362537622451782 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 2.3613507747650146 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.30736061930656433 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'merlot': 1 / (1 + 1 / Math.exp(-0.4169570803642273 - 0.8556543588638306 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.7459853291511536 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.7088240385055542 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.1174914836883545 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.09057236462831497 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.33233246207237244 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.41277673840522766 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 0.6814242601394653 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.0640735626220703 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.4159095585346222 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.192136526107788 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.16634269058704376 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.3298111855983734 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 0.18622024357318878 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.11623035371303558 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.1165202185511589 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.6926400661468506 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.20426420867443085 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.3165989816188812 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 0.9100772142410278 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.7788484692573547 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.1595536768436432 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.7596104741096497 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.1588116884231567 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.009889884851872921 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.2970412969589233 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.16406843066215515 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.27589839696884155 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 0.4767304062843323 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.200809121131897 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'ruby': 1 / (1 + 1 / Math.exp(-1.0727256536483765 - 1.383504867553711 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 3.552177906036377 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.8311436176300049 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.8857522010803223 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 2.7286972999572754 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.25605645775794983 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.8760625123977661 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 2.045076608657837 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.6915887594223022 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.8248587846755981 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.116654872894287 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 1.5903159379959106 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.6023783683776855 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 5.440119743347168 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 1.1455620527267456 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.15066444873809814 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.6359137296676636 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.07624059915542603 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 0.8014383316040039 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 2.0305213928222656 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 2.2356834411621094 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 2.002366065979004 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 2.8435988426208496 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.16781294345855713 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 1.1891783475875854 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 1.3299990892410278 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 3.1629292964935303 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 2.1440794467926025 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 2.641096353530884 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.18654386699199677 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'scarlet': 1 / (1 + 1 / Math.exp(-0.9400268793106079 - 1.7837235927581787 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.7041502594947815 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.1345967054367065 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.531096339225769 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.3026214838027954 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.25764548778533936 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.2377116680145264 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.2835172414779663 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.206210732460022 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.0061602592468262 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.8545383214950562 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.6584349274635315 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.8373993635177612 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 2.1578094959259033 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.9837779402732849 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.025639930739998817 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.2548832893371582 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.07650716602802277 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.05406573787331581 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.4164891242980957 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.7936439514160156 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.8287175297737122 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 1.1646612882614136 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.5194932222366333 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.5420436859130859 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.11128032207489014 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 1.2874149084091187 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.133347988128662 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 0.6320106387138367 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.8423070907592773 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'redwine': 1 / (1 + 1 / Math.exp(-1.5334490537643433 + 0.9794613718986511 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 5.1191630363464355 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.022494316101074 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 3.0582659244537354 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.3124482333660126 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 0.40637168288230896 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 2.456827163696289 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 0.2842148244380951 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 2.091303586959839 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 2.098656177520752 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 0.22288762032985687 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 1.3399919271469116 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 2.074286460876465 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 1.9938985109329224 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 3.903528928756714 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.46669888496398926 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 2.0094997882843018 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.08190325647592545 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 0.28424251079559326 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.9224495887756348 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 2.8658995628356934 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.5500971078872681 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 1.9718401432037354 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 3.4444377422332764 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.4907205104827881 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 3.14568829536438 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 3.1377315521240234 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.9237074851989746 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 2.362077474594116 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 2.2188267707824707 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'redapple': 1 / (1 + 1 / Math.exp(-1.035955786705017 - 1.6489583253860474 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.4375903308391571 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.3291683197021484 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.0222547054290771 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.7550076842308044 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.40665072202682495 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.6439936757087708 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 0.7372995615005493 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 0.9231780171394348 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.5364653468132019 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.5921722650527954 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.27046653628349304 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.5334326028823853 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 0.21510182321071625 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.19368667900562286 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.30405616760253906 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.0439335107803345 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.10435577481985092 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.2593167722225189 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.5205312967300415 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.28958237171173096 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.8375930786132812 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 0.6459704041481018 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.2582602798938751 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.07799907773733139 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 0.02704688161611557 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.9375990629196167 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.6791481375694275 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 0.3085913360118866 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.6607721447944641 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'blood': 1 / (1 + 1 / Math.exp(-1.1960252523422241 - 2.910977840423584 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 3.0947580337524414 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.700987696647644 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.7746261358261108 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.778157651424408 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.05091342329978943 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.3526791334152222 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.31432321667671204 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.4895002841949463 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.0522184371948242 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 3.0619871616363525 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 1.0557732582092285 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.3692373037338257 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 0.5951422452926636 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 2.712878465652466 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.4045596718788147 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.2778385877609253 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.2603345215320587 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.02989163249731064 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.4145716428756714 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 1.280019760131836 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.7631946206092834 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 2.14752197265625 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 3.251906394958496 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.8938212990760803 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.0783252716064453 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 2.53568434715271 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.1274361610412598 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 1.473135232925415 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.652823805809021 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'sangria': 1 / (1 + 1 / Math.exp(-0.5994141697883606 - 1.4239765405654907 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 1.16826331615448 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.750584065914154 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.3799633979797363 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.2594650685787201 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.16246041655540466 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.5327553749084473 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 0.7133012413978577 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 0.8770961761474609 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.594894528388977 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.6791940927505493 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.4622434973716736 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.5912958979606628 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 0.5137442350387573 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.9083817601203918 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.019678037613630295 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.9218308925628662 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.24679945409297943 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.19666528701782227 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 0.8541191816329956 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.7909168004989624 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.20652566850185394 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.7630541324615479 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.3099404573440552 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.22330673038959503 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.0147125720977783 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.22747330367565155 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.7707302570343018 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 0.07104231417179108 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.2884377241134644 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'candy': 1 / (1 + 1 / Math.exp(-2.294642925262451 - 2.8913180828094482 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.13840080797672272 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 3.027710437774658 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 2.734038829803467 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 4.140420913696289 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.5168584585189819 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 3.0352325439453125 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 1.1051961183547974 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 3.1996419429779053 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.533191442489624 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.959676504135132 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.27193117141723633 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 3.3469927310943604 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 1.5105082988739014 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.130201518535614 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 1.0170589685440063 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 2.826681613922119 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.039658479392528534 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 2.069580078125 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 3.0850636959075928 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.4441763162612915 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 2.3183515071868896 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 4.561277389526367 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.7676952481269836 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 2.977106809616089 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 2.3578085899353027 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 5.506330966949463 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 2.6789674758911133 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 2.572575569152832 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 2.3483564853668213 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'lipstick': 1 / (1 + 1 / Math.exp(-0.9930121302604675 - 1.6185786724090576 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.8996582627296448 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.7421671152114868 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.491422176361084 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.3720684051513672 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.21249550580978394 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.2337969541549683 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.12368747591972351 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.3315640687942505 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.7134386301040649 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.7494934797286987 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.4928537607192993 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.532888412475586 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 0.20978304743766785 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.6219638586044312 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.05591950565576553 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.3561965227127075 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.18650683760643005 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.22660017013549805 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.6370258331298828 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.3570484220981598 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.7109686136245728 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.06093825027346611 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.424141526222229 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.7922072410583496 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.8063305616378784 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 2.1797497272491455 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.3696759939193726 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 0.7093687653541565 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 0.1474381536245346 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'pink': 1 / (1 + 1 / Math.exp(-2.4165351390838623 - 2.1797449588775635 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.1381281018257141 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 0.374153196811676 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 2.909611225128174 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.8403328657150269 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 6.529447555541992 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 0.2587124705314636 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 3.46632719039917 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 2.0926356315612793 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.6829484105110168 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.0316128730773926 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 0.6796802878379822 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.1949460804462433 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 3.7368812561035156 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.14911893010139465 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 3.396590232849121 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 1.7510696649551392 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 3.7761778831481934 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 3.0300164222717285 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 1.5002089738845825 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.7591550946235657 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 2.0953543186187744 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 3.3556313514709473 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.049405425786972046 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 2.394758462905884 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.3428298830986023 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.15731389820575714 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 0.4982742369174957 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 3.42734432220459 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 0.29040974378585815 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'fuchsia': 1 / (1 + 1 / Math.exp(-2.821063995361328 - 2.0599427223205566 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.4216735064983368 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 0.34843572974205017 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 4.352047443389893 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 3.4505512714385986 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.2105121910572052 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 2.776413679122925 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 3.0447237491607666 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 2.3560116291046143 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 2.4610393047332764 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.6347320079803467 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 0.5023932456970215 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.5717636942863464 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 2.6609466075897217 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 2.4674534797668457 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 4.286837577819824 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 0.174890398979187 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 2.873213291168213 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.6540733575820923 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.5108762979507446 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 3.0295238494873047 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 2.70674204826355 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 4.6475605964660645 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.3942590951919556 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 2.514434576034546 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 1.4076666831970215 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.6672088503837585 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 2.6563470363616943 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 2.1884100437164307 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.6440262198448181 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'punch': 1 / (1 + 1 / Math.exp(-0.958928108215332 - 0.7784894704818726 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.18406891822814941 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.049410246312618256 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 4.3952741622924805 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.386372834444046 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.4549720287322998 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.5933465957641602 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 2.9913692474365234 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 0.45405542850494385 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.370975136756897 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.0377066135406494 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.9230239987373352 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.03576170280575752 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 5.421359539031982 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.9688540101051331 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 3.2745044231414795 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 2.28823184967041 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 1.2006957530975342 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 0.0832260325551033 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.8740549087524414 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.8023964166641235 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.22392538189888 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.371065378189087 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 0.4339795708656311 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.954093098640442 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.2815276384353638 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 1.6324325799942017 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.5883575081825256 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 3.4825398921966553 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.842042088508606 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'watermelon': 1 / (1 + 1 / Math.exp(-1.54726243019104 - 0.8862248659133911 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.3766343891620636 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 0.2670789957046509 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 3.043632745742798 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.4427754878997803 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 5.486246109008789 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.0064878463745117 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 2.440096855163574 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 1.5273643732070923 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.19575661420822144 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.1217788457870483 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 2.0302236080169678 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.5846619606018066 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 4.183756351470947 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 3.0674993991851807 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 2.394235610961914 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.026312364265322685 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 2.526685953140259 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 2.37724232673645 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.8863497376441956 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 1.601731300354004 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.0881381034851074 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.634170651435852 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 0.1540304571390152 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.3334506750106812 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.8570337295532227 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.519622802734375 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.5966224074363708 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 3.7082033157348633 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 0.7614399194717407 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'coral': 1 / (1 + 1 / Math.exp(-1.4356876611709595 - 0.9460229873657227 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.4793660342693329 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 0.9603930711746216 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 3.8177435398101807 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.8677759170532227 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 3.3770065307617188 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.8713457584381104 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.5094729661941528 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 3.9558181762695312 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.7708093523979187 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.0631401538848877 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 2.42997407913208 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.3483350872993469 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.1334620714187622 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.37543368339538574 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 4.543406963348389 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 3.359102249145508 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 1.6779329776763916 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 1.668142557144165 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 1.7258754968643188 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.06852962076663971 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.3234080076217651 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.395769715309143 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 1.7845149040222168 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 2.7166428565979004 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.5188676118850708 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.1015995591878891 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.0292514562606812 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 3.702901840209961 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 0.19111521542072296 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'peach': 1 / (1 + 1 / Math.exp(-1.591460108757019 - 0.8686572313308716 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.7492859363555908 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 0.6206324696540833 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 3.626490831375122 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.7273099422454834 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 5.632594585418701 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.8268632888793945 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 3.3913018703460693 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 0.5555040836334229 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.7668566703796387 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.8576744198799133 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 2.0002288818359375 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.21417419612407684 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 3.3878235816955566 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 1.140881061553955 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 2.7198715209960938 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.8504517078399658 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 2.2139084339141846 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 1.9649684429168701 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.4203234612941742 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.169345885515213 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.9683986902236938 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.3198803663253784 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 1.7829127311706543 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.6009596586227417 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.5901474356651306 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.42515671253204346 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.9624115824699402 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.3873777389526367 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.056410208344459534 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'strawberry': 1 / (1 + 1 / Math.exp(-1.272485613822937 - 1.076833724975586 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.139075368642807 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 1.220444917678833 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 3.9994232654571533 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.2690200805664062 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.3537676334381104 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.310964584350586 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 2.6132335662841797 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 5.373373985290527 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.5236008763313293 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.1966677904129028 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 1.0248559713363647 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.45723670721054077 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 3.5701587200164795 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.09880572557449341 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 2.2937121391296387 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 2.8202741146087646 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 1.945434331893921 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 1.897560954093933 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 1.958382248878479 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.36970752477645874 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.0538561344146729 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 2.115469217300415 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 1.0590287446975708 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 3.348600149154663 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.3266967535018921 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.1162499338388443 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.7247174978256226 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.2865254878997803 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 0.15826021134853363 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'bubblegum': 1 / (1 + 1 / Math.exp(-1.735470175743103 - 1.0762972831726074 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.3691144585609436 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 0.003248499007895589 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 0.369533509016037 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 2.7955658435821533 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 1.8474762439727783 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 3.2826905250549316 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 3.0321242809295654 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 1.6603847742080688 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.1690583229064941 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.2050930261611938 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 2.3542754650115967 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.4578559994697571 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 7.5869574546813965 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 2.0703303813934326 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 3.079636812210083 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.5350944399833679 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 2.2774112224578857 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.23350009322166443 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 1.9912978410720825 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.5457703471183777 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.8789987564086914 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 2.711250066757202 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.22838075459003448 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.4626123905181885 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 1.1590378284454346 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.6763876080513 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 2.642397403717041 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.772289991378784 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 0.0851651132106781 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'hotpink': 1 / (1 + 1 / Math.exp(-2.0672967433929443 - 1.7692943811416626 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.831538736820221 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 0.31392407417297363 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 3.8214831352233887 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 2.691258668899536 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.9939074516296387 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 2.3900482654571533 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 5.0139617919921875 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 1.549618124961853 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.7566816806793213 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.413428783416748 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.5378227233886719 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.5680713653564453 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 4.655661106109619 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 2.6100142002105713 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 3.09480619430542 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 3.5465774536132812 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 1.9365508556365967 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.3732410669326782 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.0813952684402466 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 1.5402662754058838 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 2.4730916023254395 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 2.101274251937866 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 0.16434131562709808 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 3.4089505672454834 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) + 0.7398743033409119 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 1.4591137170791626 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 2.276728630065918 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 2.934623956680298 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) + 0.5774738192558289 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'purple': 1 / (1 + 1 / Math.exp(-2.1564455032348633 - 2.568350076675415 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.29351896047592163 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 0.8824902772903442 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 1.8090455532073975 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 3.0012810230255127 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.9034650325775146 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.9149729013442993 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 2.8950583934783936 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 1.1592267751693726 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 2.123612403869629 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.622966766357422 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.403304785490036 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.10527534782886505 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 2.606318950653076 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 4.093094825744629 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 4.281639575958252 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 1.693770408630371 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 3.7154488563537598 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.1625516265630722 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.927699089050293 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 2.6992027759552 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 2.3382670879364014 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 0.7304738163948059 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.037383660674095154 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 2.8510358333587646 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 0.6275571584701538 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.23852990567684174 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 2.4226338863372803 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 2.2671420574188232 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.6918718814849854 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'violet': 1 / (1 + 1 / Math.exp(-1.489545464515686 - 1.8337130546569824 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 2.884284257888794 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.073452949523926 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 1.1271802186965942 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.592949390411377 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.1539002656936646 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 2.192979335784912 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 2.8622825145721436 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 1.2604787349700928 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.7888003587722778 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 4.745301246643066 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 1.2592545747756958 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.1291383504867554 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 2.8046374320983887 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 3.5720787048339844 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.7275347113609314 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.565822720527649 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.48905453085899353 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 0.13639964163303375 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 3.705202341079712 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 2.2950689792633057 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.8641022443771362 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 2.437255382537842 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 1.6630445718765259 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.6248291730880737 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.5738121271133423 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 1.3164740800857544 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 2.1192774772644043 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 1.9333328008651733 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.5342282056808472 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'maroon': 1 / (1 + 1 / Math.exp(-1.2651468515396118 - 2.4966189861297607 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.34558534622192383 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.4833437204360962 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 2.787855625152588 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.7895299196243286 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 0.20965880155563354 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.41755932569503784 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 4.6115241050720215 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.0778497457504272 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.0096288919448853 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.3134891986846924 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.40255290269851685 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.24030263721942902 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 4.8058037757873535 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 2.123629570007324 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 1.6811803579330444 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 2.35683012008667 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 1.2806572914123535 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.1375010907649994 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.8351637125015259 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 1.8227628469467163 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.0619237422943115 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 1.0449689626693726 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 2.9681930541992188 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.9093530178070068 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.7107632160186768 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.7766294479370117 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.3826615810394287 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 0.6711555123329163 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 2.462575912475586 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'plum': 1 / (1 + 1 / Math.exp(-0.6926149129867554 - 2.4305145740509033 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.4477016031742096 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.3318160772323608 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.7224892377853394 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 1.1884883642196655 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.057169802486896515 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.5189266204833984 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 2.783480405807495 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.9372971057891846 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.2332877516746521 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 3.905585527420044 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 1.241560459136963 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.3070172369480133 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 3.2756266593933105 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 1.4569904804229736 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.9946944117546082 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.5918031930923462 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.6912562251091003 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 0.1067831888794899 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.151796817779541 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 1.13375723361969 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.10767369717359543 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.9236661195755005 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.882816731929779 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 1.396345853805542 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 3.2797744274139404 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 1.4863194227218628 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.4871213436126709 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.031840205192566 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.843096137046814 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'eggplant': 1 / (1 + 1 / Math.exp(-0.8315069675445557 + 0.15049125254154205 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 1.2393802404403687 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.01701021194458 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 0.4305112063884735 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.3063875138759613 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.3317517936229706 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.137363076210022 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 2.8428196907043457 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 2.3209023475646973 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.5885554552078247 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.7273774147033691 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 1.2463834285736084 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.49904975295066833 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 3.449035167694092 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 4.521251201629639 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.7739868760108948 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 2.522881507873535 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 1.928787350654602 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.3335718810558319 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.0236399173736572 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 1.1706496477127075 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.9984204173088074 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.6017304062843323 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.7020714282989502 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 1.3155593872070312 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.2653074264526367 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 1.1232410669326782 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.055968999862671 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 0.6596012115478516 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.9794560074806213 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'iris': 1 / (1 + 1 / Math.exp(-0.5876899361610413 - 2.8371083736419678 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.4865802824497223 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.2597551345825195 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 0.7773158550262451 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 2.254082679748535 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.5853152275085449 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 0.0943455621600151 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.2977479696273804 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 0.7405892014503479 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) + 0.12425530701875687 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 3.011183977127075 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 0.1279694139957428 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.6435023546218872 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 3.9589240550994873 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.4878833293914795 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.8332290649414062 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.4948744475841522 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.7515286803245544 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.6476253271102905 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.1660624742507935 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 1.7954003810882568 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) + 0.8209024667739868 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.7122550010681152 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 1.9867610931396484 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 0.6030431389808655 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.1930859088897705 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.5801904201507568 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 0.4645163118839264 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.9874184131622314 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.586752712726593 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'amethyst': 1 / (1 + 1 / Math.exp(-1.752270221710205 - 1.8346986770629883 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.6151019930839539 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) + 1.694076657295227 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 1.4670987129211426 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 2.6737253665924072 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 4.012141227722168 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.0293947458267212 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 3.4670426845550537 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 0.8884537816047668 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.6690527200698853 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.6684300899505615 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 2.807156562805176 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) + 0.46647214889526367 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 4.250644683837891 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 5.016490936279297 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 3.10365891456604 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 1.4618299007415771 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 3.322718381881714 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 0.006736087147146463 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 1.7680453062057495 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 3.8301193714141846 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 2.9974923133850098 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 2.521880865097046 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 0.05047823116183281 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 2.217241048812866 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.4191333055496216 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.007530800066888332 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.6145480871200562 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 0.2835623323917389 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.7972866296768188 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'raisin': 1 / (1 + 1 / Math.exp(-1.3229442834854126 + 4.035672664642334 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 3.9354512691497803 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.1264607906341553 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 3.3430569171905518 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 1.3942315578460693 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 0.09472434967756271 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 2.78631329536438 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.1881238222122192 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 3.2242305278778076 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 2.059086322784424 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 3.3906710147857666 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) + 2.1749136447906494 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.9775519371032715 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 4.186303615570068 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 3.1396260261535645 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.19479162991046906 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 3.1059138774871826 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 1.1841961145401 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 0.3431657552719116 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 2.239327907562256 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 3.0810065269470215 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 1.1829348802566528 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.7877587676048279 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 2.085299253463745 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.6968721747398376 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.217389702796936 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 2.7179453372955322 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 2.4762680530548096 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 3.582338333129883 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 2.01005482673645 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'green': 1 / (1 + 1 / Math.exp(-0.9822072982788086 - 2.9255149364471436 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.13888344168663025 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.7553366422653198 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.1686427593231201 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.3322795331478119 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 4.508013725280762 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 0.535211980342865 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.30504941940307617 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 3.938917875289917 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.4766470491886139 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 2.554441452026367 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.8867418766021729 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.2057256698608398 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.5623660683631897 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 4.455834865570068 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 2.658069610595703 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 1.6708054542541504 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 3.6843624114990234 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.8195285201072693 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.2405043840408325 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.03566886484622955 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.07007725536823273 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 0.8060583472251892 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.7486388683319092 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 1.7770624160766602 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.459413766860962 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.2151731550693512 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 0.6102457046508789 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.8469260931015015 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.7963869571685791 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'lime': 1 / (1 + 1 / Math.exp(-2.0710716247558594 + 1.9577335119247437 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 1.4175258874893188 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.4673019647598267 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 2.141106128692627 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.630596399307251 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 4.6272759437561035 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.6237871646881104 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 1.9946112632751465 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 0.94428551197052 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.8138219714164734 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 2.9870412349700928 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 3.5527713298797607 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.2359949350357056 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 2.627636194229126 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 3.2189407348632812 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 2.9129929542541504 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 0.38753542304039 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 2.75177264213562 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 2.764474630355835 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 0.8069031834602356 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.37304651737213135 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.09718969464302063 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 1.1378849744796753 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 3.6476011276245117 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 0.8318270444869995 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.299591541290283 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.6082311868667603 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 0.05483441799879074 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.472982883453369 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 2.226602792739868 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'olive': 1 / (1 + 1 / Math.exp(-0.4844319820404053 - 3.4044244289398193 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.4034198522567749 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.727228045463562 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 0.12931734323501587 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.8797828555107117 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 1.5617132186889648 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.11512057483196259 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 2.3678431510925293 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 0.6027275919914246 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.5831856727600098 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 4.6497087478637695 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.4095324277877808 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.7078422904014587 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.0379043817520142 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.5430870056152344 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 1.4845046997070312 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) + 1.7575774192810059 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 2.727631092071533 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.21315144002437592 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) + 1.0019606351852417 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.9131242632865906 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) + 0.005600916221737862 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 3.054222583770752 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 3.4232287406921387 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.8545931577682495 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 3.382108211517334 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.6581934690475464 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.0042001008987427 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 0.82967609167099 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 2.4778683185577393 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'emerald': 1 / (1 + 1 / Math.exp(-1.7023464441299438 + 1.7338660955429077 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 1.9983274936676025 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.1164112091064453 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 2.4719369411468506 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.012198536656796932 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 0.545732855796814 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 0.5223149061203003 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 1.4281388521194458 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 3.120480537414551 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.7166156768798828 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 2.181715965270996 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 4.502857208251953 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.795964241027832 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 2.723827600479126 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.216099977493286 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.9001644849777222 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.6359909772872925 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.63532954454422 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 1.498186707496643 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 2.2950992584228516 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.33780336380004883 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) + 0.2793704867362976 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.801831841468811 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 2.8918628692626953 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.8080045580863953 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.6952757835388184 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 1.4993208646774292 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 0.9392727613449097 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 3.7188446521759033 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.2662451267242432 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'pear': 1 / (1 + 1 / Math.exp(-1.242185354232788 - 3.2644877433776855 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.12010877579450607 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.8619346618652344 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 3.578153133392334 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 1.4279755353927612 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 2.1972861289978027 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 1.226372241973877 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.45911648869514465 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 2.787114143371582 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.7102302312850952 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.8098971843719482 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 2.4064126014709473 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.0863293409347534 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.5412230491638184 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 2.272733688354492 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 1.4950724840164185 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.4174060821533203 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 1.7777941226959229 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.9827958941459656 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 0.644767701625824 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.04751322790980339 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) + 1.0613744258880615 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 3.4585824012756348 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 3.2275993824005127 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 1.9091075658798218 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 4.571396350860596 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.5156201720237732 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) + 0.6772333979606628 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.489854097366333 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 2.123358726501465 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'pickle': 1 / (1 + 1 / Math.exp(-1.017042875289917 - 3.210373878479004 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.5679562091827393 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.4052751064300537 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.1091092824935913 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.13061420619487762 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.455690622329712 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 0.41817817091941833 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.5639529228210449 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.0088900327682495 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.746938169002533 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.7683875560760498 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 3.642857789993286 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.3196980059146881 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.3804160356521606 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.266437530517578 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.5859893560409546 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.6655562520027161 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.6857264637947083 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.264773428440094 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 2.5596704483032227 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.2211056351661682 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) + 0.08516109734773636 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 0.1509738564491272 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.988088846206665 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.5243605375289917 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.777055025100708 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.1495945304632187 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.4459977447986603 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.339017152786255 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.3999884128570557 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'crocodile': 1 / (1 + 1 / Math.exp(-1.0164591073989868 - 2.6760525703430176 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.6601703763008118 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.8719339370727539 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 0.5959441661834717 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.32978129386901855 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.7911732196807861 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) + 0.4435296058654785 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.6946552395820618 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 0.9188840389251709 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.5846203565597534 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.480761766433716 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 3.603792905807495 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.1816011667251587 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.777827262878418 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.3971662521362305 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.32544800639152527 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.3647274971008301 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 1.2366342544555664 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 0.1299116164445877 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 2.468144178390503 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.19315117597579956 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.07809191197156906 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 0.6486842036247253 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 2.2071008682250977 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 0.4479616582393646 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.056443691253662 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.3712400794029236 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.6961557865142822 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.5706162452697754 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.5434184074401855 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'mocha': 1 / (1 + 1 / Math.exp(-0.8150667548179626 - 0.38763228058815 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 1.4700205326080322 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.946845293045044 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.8188910484313965 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.094159796833992 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.29678407311439514 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.335127353668213 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.6447159051895142 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.3873406648635864 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.6308075189590454 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 0.9094870090484619 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 2.564979076385498 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.0450820922851562 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 2.095771312713623 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.36192336678504944 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.34948861598968506 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.6024805307388306 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.6769048571586609 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.4783438742160797 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.256360650062561 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.46488621830940247 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.08789019286632538 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.8795656561851501 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.755077838897705 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.2824241816997528 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.4304530620574951 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.8561668395996094 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.2645288705825806 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.2620410919189453 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.060530424118042 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'peanut': 1 / (1 + 1 / Math.exp(-1.2556198835372925 - 2.2174947261810303 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 1.1309688091278076 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.9991291761398315 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 2.0505616664886475 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.30202364921569824 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.615265130996704 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.8349704146385193 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.3458948135375977 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.421130657196045 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.8555774688720703 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 3.1199896335601807 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.966346025466919 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) + 0.04834045097231865 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.5947186946868896 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.8885902166366577 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.7663729190826416 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.42066490650177 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.6514170169830322 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 0.3474538028240204 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 2.6023552417755127 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.28629791736602783 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.7138240337371826 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 0.6681888103485107 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.9759640693664551 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 0.7825978398323059 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.90625 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 1.7360234260559082 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.8863669037818909 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 3.569366931915283 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.9205039739608765 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'walnut': 1 / (1 + 1 / Math.exp(-0.5854875445365906 - 0.593238890171051 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 1.0337867736816406 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.9728022813796997 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.6365530490875244 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.00419856421649456 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.07985547184944153 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.7788673639297485 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 0.0682009607553482 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 0.9697954058647156 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.6131021976470947 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 0.08395841717720032 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.367053508758545 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.678482711315155 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.0173677206039429 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.15404456853866577 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.04335661977529526 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.1451520919799805 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.003308303654193878 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.20588865876197815 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 0.9903543591499329 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.576941192150116 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.08635856211185455 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.8209593296051025 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.2204049825668335 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.06012200936675072 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.138051986694336 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.32934483885765076 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.4660803973674774 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 0.9964271187782288 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.9243445992469788 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'caramel': 1 / (1 + 1 / Math.exp(-1.324280858039856 - 2.6060373783111572 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.47637736797332764 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.4106535911560059 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.5353164672851562 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.25723984837532043 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.3459396958351135 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.663092851638794 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.3301542103290558 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.3276084661483765 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.794373631477356 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.6185698509216309 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 2.07068133354187 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.1182175874710083 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.4931920766830444 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 1.8295282125473022 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.2168349325656891 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.3815464973449707 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.1876208484172821 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.09626884013414383 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.7834112644195557 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.21243377029895782 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.058446045964956284 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 2.067579984664917 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 2.0306098461151123 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.5202814340591431 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.449183702468872 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.8690869808197021 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.5161956548690796 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.585540771484375 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.421761155128479 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'chocolate': 1 / (1 + 1 / Math.exp(-1.848012924194336 + 4.3298773765563965 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 4.244811058044434 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 2.453502655029297 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 3.6895546913146973 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.6462465524673462 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) - 0.6739293336868286 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 2.046349287033081 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 1.8175175189971924 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 3.2884228229522705 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 1.7897974252700806 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 5.268941879272461 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 2.9849746227264404 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 2.773618459701538 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 2.2290220260620117 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 0.8845774531364441 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.5511627197265625 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 2.798478603363037 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.26424023509025574 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.5449742674827576 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 2.275338888168335 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 2.238947868347168 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) + 0.22186312079429626 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.3744947910308838 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 3.4219717979431152 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.5052672028541565 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.708106517791748 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 4.024664878845215 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.4391798973083496 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) + 0.7693285942077637 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.6701301336288452 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'tortilla': 1 / (1 + 1 / Math.exp(-0.5164299011230469 - 1.5465147495269775 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 1.0595959424972534 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.5587455034255981 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.5152174234390259 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.5039357542991638 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.85653817653656 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.6710901856422424 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.7094279527664185 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 0.8747292160987854 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.5535632371902466 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.0452585220336914 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.0875505208969116 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.032208409160375595 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.1351085901260376 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.4042670726776123 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.425279438495636 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.075129747390747 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.18350359797477722 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) + 1.133736491203308 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 0.5510265827178955 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) + 0.14080433547496796 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.4675997793674469 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) - 3.3227527141571045 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) + 0.25046828389167786 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 3.1316452026367188 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.910430669784546 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 1.5942238569259644 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 1.394066572189331 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.9250692129135132 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 2.587679862976074 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'brunette': 1 / (1 + 1 / Math.exp(-1.1908177137374878 + 0.3304348587989807 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 1.8458518981933594 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.2305669784545898 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 2.396845817565918 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.4597468376159668 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.10082443803548813 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 1.126101016998291 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.8324066996574402 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.9353430271148682 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.8457481861114502 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) + 1.6748809814453125 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.6880916357040405 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 1.2721997499465942 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 2.0685338973999023 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.8876787424087524 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.3089851438999176 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.881055474281311 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.19023962318897247 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.6629474759101868 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.5054830312728882 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.5938935875892639 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.12092864513397217 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.5292706489562988 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 2.370671510696411 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.3327420949935913 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.1479356288909912 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 1.9962161779403687 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.7894293069839478 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 0.1505926102399826 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.6437668800354004 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'cinammon': 1 / (1 + 1 / Math.exp(-1.136553406715393 - 1.868703842163086 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.986440122127533 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.0700628757476807 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.3588870763778687 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.07471873611211777 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.21970537304878235 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.779026210308075 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) + 0.3190506100654602 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 0.9762353301048279 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.7925150394439697 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 1.6245578527450562 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 0.7022005915641785 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.8686689734458923 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 1.4383922815322876 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 1.558255672454834 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) - 0.4290248155593872 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.907912015914917 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.2591169774532318 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.22506317496299744 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.461095929145813 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.21482150256633759 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.24699300527572632 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 1.4275933504104614 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.7799876928329468 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.08930566906929016 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 2.0744528770446777 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.7491499781608582 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.6437591314315796 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 0.7901063561439514 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.190880298614502 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'penny': 1 / (1 + 1 / Math.exp(-0.7633464336395264 - 1.301023006439209 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.8366197347640991 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.825690746307373 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 1.263837456703186 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.11640223860740662 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.23405568301677704 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.6648492217063904 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 0.0968998372554779 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 0.9123626947402954 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.4842888116836548 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.7275933623313904 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 0.6541953086853027 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.6155507564544678 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.6857874989509583 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) + 0.16385671496391296 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.010089121758937836 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.8159336447715759 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.005890334490686655 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.11827775090932846 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.1233571767807007 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.7364353537559509 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.07297247648239136 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.9395146369934082 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.3524410724639893 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.1665552407503128 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.5581443309783936 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) - 0.048104871064424515 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.3374309539794922 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.0180225372314453 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 1.095665454864502 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'shadow': 1 / (1 + 1 / Math.exp(-0.5322485566139221 - 0.5319530367851257 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.27772149443626404 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.6444476842880249 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 0.6078367233276367 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.1874549686908722 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.7513181567192078 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.727857232093811 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 0.6737677454948425 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.1530170440673828 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.3105155825614929 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.5044451355934143 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 1.1075422763824463 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.18918730318546295 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.6350107789039612 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.4871561527252197 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.5974566340446472 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.1428273916244507 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.3206578195095062 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.25523409247398376 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.1151896715164185 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.8575574159622192 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.6176064014434814 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.9437099695205688 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.9703839421272278 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.26823875308036804 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 0.9955072999000549 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.29003825783729553 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.8471967577934265 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.993638515472412 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.8777070641517639 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'graphite': 1 / (1 + 1 / Math.exp(-0.7004689574241638 - 2.142198324203491 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.490622341632843 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.3093374967575073 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 0.7423412799835205 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) + 0.07125135511159897 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.3266639709472656 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.5136774778366089 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.4479835033416748 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 0.10240674763917923 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.2316097915172577 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.2437634468078613 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 0.385731041431427 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.44295886158943176 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 0.5557787418365479 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.000594139099121 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 1.3635239601135254 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.7140390872955322 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.36172929406166077 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.30489131808280945 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.6391724348068237 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.44204413890838623 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.4492091238498688 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.5889635682106018 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.7151823043823242 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 0.8059570789337158 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.0817034244537354 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.3118635416030884 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.6385693550109863 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.590771198272705 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.6927036643028259 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'iron': 1 / (1 + 1 / Math.exp(-0.5393306612968445 - 0.3050491213798523 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) - 0.3997008502483368 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.7059346437454224 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 0.9822375178337097 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.006968695670366287 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 0.3234277665615082 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.6657735705375671 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 0.7078720331192017 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 1.3347572088241577 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.5489856600761414 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 0.34549856185913086 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 0.5480292439460754 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.25731340050697327 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.39917659759521484 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.802713394165039 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 0.4475904107093811 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.2643568515777588 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.7132743000984192 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.13552889227867126 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 0.7087279558181763 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.6602415442466736 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.538366973400116 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.7641577124595642 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.8946170210838318 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) + 0.13454517722129822 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.127421259880066 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.4641334116458893 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.8871066570281982 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 1.414829969406128 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.7258576154708862 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'smoke': 1 / (1 + 1 / Math.exp(-0.806510865688324 - 2.2975687980651855 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.8461621403694153 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 1.4557551145553589 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) + 1.1069602966308594 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.011245694011449814 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 2.1193695068359375 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.5365291237831116 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.5221428871154785 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) + 0.6184201240539551 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.2839909791946411 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.6843392848968506 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 0.6679786443710327 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.8261716365814209 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) - 0.23781323432922363 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.2913095951080322 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 1.4516042470932007 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 0.587511420249939 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) - 0.9867715835571289 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.280021995306015 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.8019208908081055 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.24600568413734436 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.3389846384525299 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 0.3612191081047058 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 0.7362964749336243 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 1.3552751541137695 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.2620835304260254 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.1806216984987259 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.9314367771148682 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.9630982875823975 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.8790094256401062 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0))))),
    'ash': 1 / (1 + 1 / Math.exp(-0.7439276576042175 - 1.9652743339538574 * 1 / (1 + 1 / Math.exp(3.491053342819214 - 12.748196601867676 * (input['r'] || 0) - 2.479801654815674 * (input['g'] || 0) + 0.04693874344229698 * (input['b'] || 0))) + 0.2813358008861542 * 1 / (1 + 1 / Math.exp(-3.517503023147583 + 6.105380058288574 * (input['r'] || 0) + 6.572768211364746 * (input['g'] || 0) + 1.849206805229187 * (input['b'] || 0))) - 0.9224696755409241 * 1 / (1 + 1 / Math.exp(-5.950821399688721 + 4.4294514656066895 * (input['r'] || 0) + 0.6040619611740112 * (input['g'] || 0) + 5.690519332885742 * (input['b'] || 0))) - 0.04543590545654297 * 1 / (1 + 1 / Math.exp(-1.8076090812683105 - 7.458327770233154 * (input['r'] || 0) + 0.22883160412311554 * (input['g'] || 0) + 14.573822975158691 * (input['b'] || 0))) - 0.09550395607948303 * 1 / (1 + 1 / Math.exp(3.158909320831299 - 6.784135341644287 * (input['r'] || 0) + 4.631516933441162 * (input['g'] || 0) - 0.46785202622413635 * (input['b'] || 0))) + 1.268984079360962 * 1 / (1 + 1 / Math.exp(9.63697624206543 - 1.696595549583435 * (input['r'] || 0) - 12.436150550842285 * (input['g'] || 0) - 5.3175153732299805 * (input['b'] || 0))) - 0.7280989289283752 * 1 / (1 + 1 / Math.exp(-2.4235711097717285 - 4.017850875854492 * (input['r'] || 0) + 7.849895477294922 * (input['g'] || 0) + 1.994064450263977 * (input['b'] || 0))) - 1.4455612897872925 * 1 / (1 + 1 / Math.exp(0.8711881637573242 - 1.321955919265747 * (input['r'] || 0) + 7.60485315322876 * (input['g'] || 0) - 11.951889038085938 * (input['b'] || 0))) - 0.7777544260025024 * 1 / (1 + 1 / Math.exp(-3.7219550609588623 - 2.7376277446746826 * (input['r'] || 0) - 1.1472105979919434 * (input['g'] || 0) + 15.066234588623047 * (input['b'] || 0))) - 0.5324946641921997 * 1 / (1 + 1 / Math.exp(-0.368623822927475 + 0.0435883104801178 * (input['r'] || 0) + 2.1362202167510986 * (input['g'] || 0) - 0.3480580747127533 * (input['b'] || 0))) - 2.296949625015259 * 1 / (1 + 1 / Math.exp(3.509165048599243 - 14.326075553894043 * (input['r'] || 0) + 4.305586338043213 * (input['g'] || 0) - 5.105566501617432 * (input['b'] || 0))) - 0.903522789478302 * 1 / (1 + 1 / Math.exp(-0.1609375774860382 + 7.408108711242676 * (input['r'] || 0) - 13.896946907043457 * (input['g'] || 0) + 3.744704008102417 * (input['b'] || 0))) - 0.39585280418395996 * 1 / (1 + 1 / Math.exp(-1.3770910501480103 + 0.3495071232318878 * (input['r'] || 0) + 0.36032620072364807 * (input['g'] || 0) + 3.8346211910247803 * (input['b'] || 0))) + 0.8240047693252563 * 1 / (1 + 1 / Math.exp(0.30945885181427 - 2.5491139888763428 * (input['r'] || 0) + 17.525951385498047 * (input['g'] || 0) - 12.29244327545166 * (input['b'] || 0))) - 2.7054500579833984 * 1 / (1 + 1 / Math.exp(-1.8775570392608643 + 12.652061462402344 * (input['r'] || 0) - 2.654963731765747 * (input['g'] || 0) - 11.581402778625488 * (input['b'] || 0))) + 1.2975257635116577 * 1 / (1 + 1 / Math.exp(7.75992488861084 - 3.1915640830993652 * (input['r'] || 0) - 4.81940221786499 * (input['g'] || 0) - 11.291279792785645 * (input['b'] || 0))) - 1.1628954410552979 * 1 / (1 + 1 / Math.exp(-4.223299503326416 - 3.9710264205932617 * (input['r'] || 0) + 5.171908378601074 * (input['g'] || 0) + 9.652212142944336 * (input['b'] || 0))) + 0.1263580471277237 * 1 / (1 + 1 / Math.exp(4.686723232269287 + 3.4744315147399902 * (input['r'] || 0) - 5.560468673706055 * (input['g'] || 0) - 10.677658081054688 * (input['b'] || 0))) - 0.10684461891651154 * 1 / (1 + 1 / Math.exp(4.094497203826904 - 3.647437334060669 * (input['r'] || 0) - 4.345785140991211 * (input['g'] || 0) + 3.256218433380127 * (input['b'] || 0))) - 1.6943254470825195 * 1 / (1 + 1 / Math.exp(-8.603906631469727 + 5.986501216888428 * (input['r'] || 0) + 8.223118782043457 * (input['g'] || 0) + 3.871692657470703 * (input['b'] || 0))) - 0.5600873231887817 * 1 / (1 + 1 / Math.exp(-2.013251781463623 + 3.531843423843384 * (input['r'] || 0) + 6.855897903442383 * (input['g'] || 0) - 4.46687126159668 * (input['b'] || 0))) - 0.5503604412078857 * 1 / (1 + 1 / Math.exp(0.8979005813598633 - 4.3080549240112305 * (input['r'] || 0) + 4.547743320465088 * (input['g'] || 0) - 2.226186990737915 * (input['b'] || 0))) + 1.3546020984649658 * 1 / (1 + 1 / Math.exp(6.924586296081543 - 8.901496887207031 * (input['r'] || 0) - 7.379622459411621 * (input['g'] || 0) + 0.5459808707237244 * (input['b'] || 0))) - 1.120739459991455 * 1 / (1 + 1 / Math.exp(-5.015160083770752 + 8.78159236907959 * (input['r'] || 0) - 7.4143877029418945 * (input['g'] || 0) + 10.165609359741211 * (input['b'] || 0))) - 0.28906309604644775 * 1 / (1 + 1 / Math.exp(5.475977897644043 - 5.0392303466796875 * (input['r'] || 0) - 0.43059223890304565 * (input['g'] || 0) - 11.288168907165527 * (input['b'] || 0))) - 1.4485105276107788 * 1 / (1 + 1 / Math.exp(-5.6441802978515625 + 10.617311477661133 * (input['r'] || 0) - 4.172114849090576 * (input['g'] || 0) - 1.9467746019363403 * (input['b'] || 0))) + 0.5685480237007141 * 1 / (1 + 1 / Math.exp(0.28970226645469666 - 3.572883129119873 * (input['r'] || 0) + 3.223032236099243 * (input['g'] || 0) + 9.746780395507812 * (input['b'] || 0))) - 0.7584618926048279 * 1 / (1 + 1 / Math.exp(-3.3139898777008057 - 2.707918167114258 * (input['r'] || 0) + 7.3779520988464355 * (input['g'] || 0) + 0.25707319378852844 * (input['b'] || 0))) - 2.459543228149414 * 1 / (1 + 1 / Math.exp(1.73220694065094 + 2.234724521636963 * (input['r'] || 0) - 15.727206230163574 * (input['g'] || 0) + 0.05234041064977646 * (input['b'] || 0))) - 0.8645943999290466 * 1 / (1 + 1 / Math.exp(-5.342218399047852 + 7.267091274261475 * (input['r'] || 0) + 0.11976777017116547 * (input['g'] || 0) - 3.694096565246582 * (input['b'] || 0)))))
  };
  var sortable = [];

  for (var color in out) {
    sortable.push([color, out[color]]);
  }

  sortable.sort(function (a, b) {
    return b[1] - a[1];
  });
  return sortable;
}

var hexToRgb = function hexToRgb(hex) {
  var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var arr = hex.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, function (m, r, g, b) {
    return '#' + r + r + g + g + b + b;
  }).substring(1).match(/.{2}/g).map(function (x) {
    return parseInt(x, 16);
  });
  var keys = ['r' + id, 'g' + id, 'b' + id];
  var output = {};
  keys.forEach(function (key, num) {
    output[key] = arr[num] / 255;
  });
  return output;
};

module.exports = model;

/***/ }),

/***/ 0:
/*!******************************************!*\
  !*** multi ./src/main.js ./src/main.css ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! /Users/domingomartinmancera/code/dmarman.github.io/src/main.js */"./src/main.js");
module.exports = __webpack_require__(/*! /Users/domingomartinmancera/code/dmarman.github.io/src/main.css */"./src/main.css");


/***/ })

/******/ });