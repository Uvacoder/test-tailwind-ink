function model(input) {
    input = hexToRgb(input)
    return {'r1':1/(1+1/Math.exp((3.3931996822357178+2.9373438358306885*(input['r']||0)-1.5267738103866577*(input['g']||0)-1.329411506652832*(input['b']||0)))),'g1':1/(1+1/Math.exp((4.262808799743652-1.134360909461975*(input['r']||0)+2.66113018989563*(input['g']||0)-2.068115711212158*(input['b']||0)))),'b1':1/(1+1/Math.exp((3.578423023223877-0.7391670942306519*(input['r']||0)-1.3643906116485596*(input['g']||0)+2.260179281234741*(input['b']||0)))),'r2':1/(1+1/Math.exp((2.0889370441436768+3.4699435234069824*(input['r']||0)-2.027162790298462*(input['g']||0)-1.3158624172210693*(input['b']||0)))),'g2':1/(1+1/Math.exp((2.70823335647583-1.1384357213974*(input['r']||0)+2.571422815322876*(input['g']||0)-1.8921228647232056*(input['b']||0)))),'b2':1/(1+1/Math.exp((2.1019656658172607-0.7525323033332825*(input['r']||0)-1.7548892498016357*(input['g']||0)+2.678703546524048*(input['b']||0)))),'r3':1/(1+1/Math.exp((1.4434012174606323+4.219131946563721*(input['r']||0)-2.78094482421875*(input['g']||0)-1.3074277639389038*(input['b']||0)))),'g3':1/(1+1/Math.exp((1.8724956512451172-1.2183971405029297*(input['r']||0)+2.4154160022735596*(input['g']||0)-1.5907050371170044*(input['b']||0)))),'b3':1/(1+1/Math.exp((1.3894414901733398-1.1438252925872803*(input['r']||0)-2.0477025508880615*(input['g']||0)+3.356908082962036*(input['b']||0)))),'r4':1/(1+1/Math.exp((0.9037853479385376+5.375821113586426*(input['r']||0)-3.743346691131592*(input['g']||0)-1.540840744972229*(input['b']||0)))),'g4':1/(1+1/Math.exp((1.2082021236419678-1.4940873384475708*(input['r']||0)+2.711359739303589*(input['g']||0)-1.653975248336792*(input['b']||0)))),'b4':1/(1+1/Math.exp((0.8242194652557373-1.6730866432189941*(input['r']||0)-2.42012619972229*(input['g']||0)+4.251338005065918*(input['b']||0)))),'r5':1/(1+1/Math.exp((0.4614700675010681+6.209679126739502*(input['r']||0)-4.344320774078369*(input['g']||0)-1.732921838760376*(input['b']||0)))),'g5':1/(1+1/Math.exp((0.6249168515205383-1.3420605659484863*(input['r']||0)+2.5369529724121094*(input['g']||0)-1.5832467079162598*(input['b']||0)))),'b5':1/(1+1/Math.exp((0.35692787170410156-1.7342549562454224*(input['r']||0)-2.8520147800445557*(input['g']||0)+4.867735385894775*(input['b']||0)))),'r6':1/(1+1/Math.exp((-0.1365586370229721+5.385352611541748*(input['r']||0)-3.6185216903686523*(input['g']||0)-1.4202663898468018*(input['b']||0)))),'g6':1/(1+1/Math.exp((0.10586927086114883-1.5270283222198486*(input['r']||0)+2.669273853302002*(input['g']||0)-1.5401948690414429*(input['b']||0)))),'b6':1/(1+1/Math.exp((-0.16909156739711761-2.0936553478240967*(input['r']||0)-2.6209301948547363*(input['g']||0)+5.135876655578613*(input['b']||0)))),'r7':1/(1+1/Math.exp((-0.6450396776199341+4.142667293548584*(input['r']||0)-2.6349234580993652*(input['g']||0)-0.9859451055526733*(input['b']||0)))),'g7':1/(1+1/Math.exp((-0.3415127694606781-1.3362336158752441*(input['r']||0)+2.370952606201172*(input['g']||0)-1.3531779050827026*(input['b']||0)))),'b7':1/(1+1/Math.exp((-0.5134440064430237-1.5882891416549683*(input['r']||0)-2.211850881576538*(input['g']||0)+4.3141021728515625*(input['b']||0)))),'r8':1/(1+1/Math.exp((-0.9648312330245972+3.0873806476593018*(input['r']||0)-1.7336136102676392*(input['g']||0)-0.8347358703613281*(input['b']||0)))),'g8':1/(1+1/Math.exp((-0.7691812515258789-1.0916533470153809*(input['r']||0)+1.904859185218811*(input['g']||0)-1.0584231615066528*(input['b']||0)))),'b8':1/(1+1/Math.exp((-0.8678452968597412-0.955710232257843*(input['r']||0)-1.7320175170898438*(input['g']||0)+3.140606641769409*(input['b']||0)))),'r9':1/(1+1/Math.exp((-1.2401903867721558+2.3200371265411377*(input['r']||0)-1.14811110496521*(input['g']||0)-0.7518591284751892*(input['b']||0)))),'g9':1/(1+1/Math.exp((-1.072513222694397-0.9722929000854492*(input['r']||0)+1.5720200538635254*(input['g']||0)-0.7999172210693359*(input['b']||0)))),'b9':1/(1+1/Math.exp((-1.170242190361023-0.6915587782859802*(input['r']||0)-1.4467790126800537*(input['g']||0)+2.5076963901519775*(input['b']||0))))};
}

const hexToRgb = (hex, id = '') => {
  let arr = hex.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i
    , (m, r, g, b) => '#' + r + r + g + g + b + b)
    .substring(1).match(/.{2}/g)
    .map(x => parseInt(x, 16));

  let keys = [
    'r' + id,
    'g' + id,
    'b' + id
  ];

  let output = {};

  keys.forEach((key, num) => {
    output[key] = arr[num]/255
  });

  return output;
};

module.exports = model;